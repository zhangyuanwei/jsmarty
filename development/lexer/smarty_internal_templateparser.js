"use strict";
///*- include_code
//*/

function TP_yyStackEntry (){
    this.stateno = 0; /* The state-number */
    this.major = 0;
    /* The major token value.  This is the code
     ** number for the token at this stack level */
    this.minor = 0;
    /* The user-supplied minor token value.  This
     ** is the value of the token  */
}

var _constructor =
//*- constructor
//line 15 "smarty_internal_templateparser.jy"

    function (lex, compiler) {
        this.lex = lex;
        this.compiler = compiler;
        this.smarty = this.compiler.smarty;
        this.template = this.compiler.template;
        this.compiler.has_variable_string = false;
        this.compiler.prefix_code = [];
        this.block_nesting_level = 0;
        //if (this.security = isset(this.smarty.security_policy)) {
        //    this.php_handling = this.smarty.security_policy.php_handling;
        //} else {
        //    this.php_handling = this.smarty.php_handling;
        //}
        this.is_xml = false;
        //this.asp_tags = (ini_get('asp_tags') != '0');
        //this.current_buffer = this.root_buffer = new _smarty_template_buffer(this);

        // states whether the parse was successful or not
        this.successful = true;
        this.retvalue = 0;
        this.internalError = false;
        this.strip = false;
    }
//line 44 "smarty_internal_templateparser.js"
/*/

    function() {}
    //*/
    ;

//*- class define
function Smarty_Internal_Templateparser()
/*/

function TP_rClass()
//*/
{
    this.yyidx = null;
    this.yyerrcnt = 0;
    this.yystack = [];

    this._retvalue = null;
    return _constructor.apply(this, arguments);
}

(function(self, proto) {

    function isset(obj, key) {
        return obj.hasOwnProperty(String(key));
    }

    function count(array) {
        return array.length;
    }

    function in_array(value, array, type) {
        for (var i = 0, length = array.length; i < length; i++) {
            var item = array[i];
            if (type ? item === value : item == value) {
                return true;
            }
        }
        return false;
    }

    //*- inclde_class
//line 42 "smarty_internal_templateparser.jy"

    self.Err1 = "Security error: Call to private object member not allowed";
    self.Err2 = "Security error: Call to dynamic object member not allowed";
    self.Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    self.prefix_number = 0;


//    public static function escape_start_tag($tag_text) {
//        $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
//        return $tag;
//    }
//
//    public static function escape_end_tag($tag_text) {
//        return '?<?php ?>>';
//    }

function strpos(haystack, needle, offset) {
  //  discuss at: http://phpjs.org/functions/strpos/
  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // improved by: Onno Marsman
  // improved by: Brett Zamir (http://brett-zamir.me)
  // bugfixed by: Daniel Esteban
  //   example 1: strpos('Kevin van Zonneveld', 'e', 5);
  //   returns 1: 14

  var i = (haystack + '')
    .indexOf(needle, (offset || 0));
  return i === -1 ? false : i;
}

function trim(str, charlist) {
  //  discuss at: http://phpjs.org/functions/trim/
  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // improved by: mdsjack (http://www.mdsjack.bo.it)
  // improved by: Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)
  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // improved by: Steven Levithan (http://blog.stevenlevithan.com)
  // improved by: Jack
  //    input by: Erkekjetter
  //    input by: DxGx
  // bugfixed by: Onno Marsman
  //   example 1: trim('    Kevin van Zonneveld    ');
  //   returns 1: 'Kevin van Zonneveld'
  //   example 2: trim('Hello World', 'Hdle');
  //   returns 2: 'o Wor'
  //   example 3: trim(16, 1);
  //   returns 3: 6

  var whitespace, l = 0,
    i = 0;
  str += '';

  if (!charlist) {
    // default list
    whitespace =
      ' \n\r\t\f\x0b\xa0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000';
  } else {
    // preg_quote custom list
    charlist += '';
    whitespace = charlist.replace(/([\[\]\(\)\.\?\/\*\{\}\+\$\^\:])/g, '$1');
  }

  l = str.length;
  for (i = 0; i < l; i++) {
    if (whitespace.indexOf(str.charAt(i)) === -1) {
      str = str.substring(i);
      break;
    }
  }

  l = str.length;
  for (i = l - 1; i >= 0; i--) {
    if (whitespace.indexOf(str.charAt(i)) === -1) {
      str = str.substring(0, i + 1);
      break;
    }
  }

  return whitespace.indexOf(str.charAt(0)) === -1 ? str : '';
}


    proto.compileVariable = function(variable) {
        if (strpos(variable, '(') == 0) {
            // not a variable variable
            var _var = trim(variable,'\'');
            this.compiler.tag_nocache=this.compiler.tag_nocache|this.template.getVariable(_var, null, true, false).nocache;
            this.template.properties['variables'][_var] = this.compiler.tag_nocache|this.compiler.nocache;
        }
//       return '(isset(_smarty_tpl.tpl_vars['. variable .'])?_smarty_tpl.tpl_vars['. variable .'].value:_smarty_tpl.getVariable('. variable .').value)';
        return '_smarty_tpl.tpl_vars[' + variable + '].value';
    };
//line 181 "smarty_internal_templateparser.js"
    //*/

    //*- token defines
    self.TP_VERT                           =  1;
    self.TP_COLON                          =  2;
    self.TP_RDEL                           =  3;
    self.TP_COMMENT                        =  4;
    self.TP_PHPSTARTTAG                    =  5;
    self.TP_PHPENDTAG                      =  6;
    self.TP_ASPSTARTTAG                    =  7;
    self.TP_ASPENDTAG                      =  8;
    self.TP_FAKEPHPSTARTTAG                =  9;
    self.TP_XMLTAG                         = 10;
    self.TP_TEXT                           = 11;
    self.TP_STRIPON                        = 12;
    self.TP_STRIPOFF                       = 13;
    self.TP_BLOCKSOURCE                    = 14;
    self.TP_LITERALSTART                   = 15;
    self.TP_LITERALEND                     = 16;
    self.TP_LITERAL                        = 17;
    self.TP_LDEL                           = 18;
    self.TP_DOLLAR                         = 19;
    self.TP_ID                             = 20;
    self.TP_EQUAL                          = 21;
    self.TP_PTR                            = 22;
    self.TP_LDELIF                         = 23;
    self.TP_LDELFOR                        = 24;
    self.TP_SEMICOLON                      = 25;
    self.TP_INCDEC                         = 26;
    self.TP_TO                             = 27;
    self.TP_STEP                           = 28;
    self.TP_LDELFOREACH                    = 29;
    self.TP_SPACE                          = 30;
    self.TP_AS                             = 31;
    self.TP_APTR                           = 32;
    self.TP_LDELSETFILTER                  = 33;
    self.TP_SMARTYBLOCKCHILDPARENT         = 34;
    self.TP_LDELSLASH                      = 35;
    self.TP_ATTR                           = 36;
    self.TP_INTEGER                        = 37;
    self.TP_COMMA                          = 38;
    self.TP_OPENP                          = 39;
    self.TP_CLOSEP                         = 40;
    self.TP_MATH                           = 41;
    self.TP_UNIMATH                        = 42;
    self.TP_ANDSYM                         = 43;
    self.TP_ISIN                           = 44;
    self.TP_ISDIVBY                        = 45;
    self.TP_ISNOTDIVBY                     = 46;
    self.TP_ISEVEN                         = 47;
    self.TP_ISNOTEVEN                      = 48;
    self.TP_ISEVENBY                       = 49;
    self.TP_ISNOTEVENBY                    = 50;
    self.TP_ISODD                          = 51;
    self.TP_ISNOTODD                       = 52;
    self.TP_ISODDBY                        = 53;
    self.TP_ISNOTODDBY                     = 54;
    self.TP_INSTANCEOF                     = 55;
    self.TP_QMARK                          = 56;
    self.TP_NOT                            = 57;
    self.TP_TYPECAST                       = 58;
    self.TP_HEX                            = 59;
    self.TP_DOT                            = 60;
    self.TP_SINGLEQUOTESTRING              = 61;
    self.TP_DOUBLECOLON                    = 62;
    self.TP_AT                             = 63;
    self.TP_HATCH                          = 64;
    self.TP_OPENB                          = 65;
    self.TP_CLOSEB                         = 66;
    self.TP_EQUALS                         = 67;
    self.TP_NOTEQUALS                      = 68;
    self.TP_GREATERTHAN                    = 69;
    self.TP_LESSTHAN                       = 70;
    self.TP_GREATEREQUAL                   = 71;
    self.TP_LESSEQUAL                      = 72;
    self.TP_IDENTITY                       = 73;
    self.TP_NONEIDENTITY                   = 74;
    self.TP_MOD                            = 75;
    self.TP_LAND                           = 76;
    self.TP_LOR                            = 77;
    self.TP_LXOR                           = 78;
    self.TP_QUOTE                          = 79;
    self.TP_BACKTICK                       = 80;
    self.TP_DOLLARID                       = 81;
    self.YY_NO_ACTION = 570;
    self.YY_ACCEPT_ACTION = 569;
    self.YY_ERROR_ACTION = 568;
    //*/

    //*- action tables
    self.YY_SZ_ACTTAB = 2407;
self.yy_action = [
 /*     0 */   219,  309,  305,  301,  302,  303,  304,  310,  311,  317,
 /*    10 */   318,  319,  201,   30,  273,    9,   33,  238,  280,   15,
 /*    20 */     5,  108,  235,  234,  220,    7,  126,   42,   30,   30,
 /*    30 */   259,  211,  256,  495,   15,   15,   10,   33,  495,  280,
 /*    40 */    46,   47,   51,   45,   24,   14,  352,  353,   39,   37,
 /*    50 */   278,  359,   12,   25,  219,  219,  326,  434,  219,  192,
 /*    60 */   434,  569,   95,  263,  227,  306,  360,  361,  358,  357,
 /*    70 */   354,  355,  356,  342,  341,  328,  329,  330,  292,  219,
 /*    80 */   202,  322,  242,   30,  434,  231,  207,  434,  143,   15,
 /*    90 */   434,   35,  158,  434,   46,   47,   51,   45,   24,   14,
 /*   100 */   352,  353,   39,   37,  278,  359,   12,   25,  219,   48,
 /*   110 */    32,  219,   48,  391,  196,    2,   31,  138,  321,    4,
 /*   120 */   360,  361,  358,  357,  354,  355,  356,  342,  341,  328,
 /*   130 */   329,  330,  127,   48,  290,  349,  251,   30,  145,  140,
 /*   140 */    30,  207,  264,   15,  200,  322,   15,  334,   46,   47,
 /*   150 */    51,   45,   24,   14,  352,  353,   39,   37,  278,  359,
 /*   160 */    12,   25,  219,  289,  219,   48,  431,  297,  219,   33,
 /*   170 */   396,  280,   18,  191,  360,  361,  358,  357,  354,  355,
 /*   180 */   356,  342,  341,  328,  329,  330,  300,  285,  286,  287,
 /*   190 */   299,  206,  219,  431,  428,  194,  201,  315,  314,  431,
 /*   200 */   207,  281,   46,   47,   51,   45,   24,   14,  352,  353,
 /*   210 */    39,   37,  278,  359,   12,   25,  219,   33,   48,  280,
 /*   220 */    34,   30,   48,  197,  322,  276,  158,   15,  360,  361,
 /*   230 */   358,  357,  354,  355,  356,  342,  341,  328,  329,  330,
 /*   240 */   230,  338,   16,  289,  103,  179,  244,  219,  295,    2,
 /*   250 */    41,   33,  265,  280,  283,  148,   46,   47,   51,   45,
 /*   260 */    24,   14,  352,  353,   39,   37,  278,  359,   12,   25,
 /*   270 */   219,  207,  145,   43,  132,  189,  109,  333,  307,  227,
 /*   280 */   306,  190,  360,  361,  358,  357,  354,  355,  356,  342,
 /*   290 */   341,  328,  329,  330,   20,   22,  248,  339,  219,   99,
 /*   300 */   174,   48,  324,   33,  346,  280,   18,  288,  207,  283,
 /*   310 */    46,   47,   51,   45,   24,   14,  352,  353,   39,   37,
 /*   320 */   278,  359,   12,   25,  219,  289,  207,   30,   41,  110,
 /*   330 */   275,    2,   41,   15,  272,  266,  360,  361,  358,  357,
 /*   340 */   354,  355,  356,  342,  341,  328,  329,  330,  242,   40,
 /*   350 */   236,  347,  104,  177,  145,  219,   44,  316,  148,  135,
 /*   360 */   228,   27,  283,  269,   46,   47,   51,   45,   24,   14,
 /*   370 */   352,  353,   39,   37,  278,  359,   12,   25,  219,  207,
 /*   380 */   208,   33,    7,  280,  245,  239,  136,  173,  241,  279,
 /*   390 */   360,  361,  358,  357,  354,  355,  356,  342,  341,  328,
 /*   400 */   329,  330,   29,  158,  106,   13,  122,  171,  181,    6,
 /*   410 */    33,   15,  226,   33,  219,  237,  283,  283,   46,   47,
 /*   420 */    51,   45,   24,   14,  352,  353,   39,   37,  278,  359,
 /*   430 */    12,   25,  219,  205,  205,  252,  313,  238,  312,  235,
 /*   440 */   232,  195,   97,  127,  360,  361,  358,  357,  354,  355,
 /*   450 */   356,  342,  341,  328,  329,  330,   28,  320,  230,  105,
 /*   460 */   182,  164,  176,   33,  279,  254,  282,  186,  207,  283,
 /*   470 */   283,  253,   46,   47,   51,   45,   24,   14,  352,  353,
 /*   480 */    39,   37,  278,  359,   12,   25,  219,  205,  260,  107,
 /*   490 */   235,  262,   33,  193,  214,  332,  166,  198,  360,  361,
 /*   500 */   358,  357,  354,  355,  356,  342,  341,  328,  329,  330,
 /*   510 */   137,  175,  167,  291,  308,  344,  185,  261,  267,  161,
 /*   520 */   283,  283,  128,  337,  124,  283,   46,   47,   51,   45,
 /*   530 */    24,   14,  352,  353,   39,   37,  278,  359,   12,   25,
 /*   540 */   219,   38,  205,  203,  141,  169,  257,  134,   35,  130,
 /*   550 */   156,  114,  360,  361,  358,  357,  354,  355,  356,  342,
 /*   560 */   341,  328,  329,  330,  320,  158,  320,  241,   36,  293,
 /*   570 */   298,   94,   21,   26,  284,  219,  292,  168,  271,  162,
 /*   580 */    46,   47,   51,   45,   24,   14,  352,  353,   39,   37,
 /*   590 */   278,  359,   12,   25,  219,  279,  229,  205,   44,  281,
 /*   600 */   187,   17,  270,  331,   98,  127,  360,  361,  358,  357,
 /*   610 */   354,  355,  356,  342,  341,  328,  329,  330,  199,  320,
 /*   620 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*   630 */   331,  331,  331,  331,   46,   47,   51,   45,   24,   14,
 /*   640 */   352,  353,   39,   37,  278,  359,   12,   25,  219,  331,
 /*   650 */   268,  331,  331,  331,  331,  331,  331,  331,  125,  115,
 /*   660 */   360,  361,  358,  357,  354,  355,  356,  342,  341,  328,
 /*   670 */   329,  330,  279,  331,  320,  331,  331,  331,  331,  331,
 /*   680 */   331,  331,  331,  331,  331,  331,  331,  331,   46,   47,
 /*   690 */    51,   45,   24,   14,  352,  353,   39,   37,  278,  359,
 /*   700 */    12,   25,  219,  331,  204,  331,  331,  331,  331,  331,
 /*   710 */   331,  159,  100,  116,  360,  361,  358,  357,  354,  355,
 /*   720 */   356,  342,  341,  328,  329,  330,  320,  320,  320,  331,
 /*   730 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*   740 */   331,  331,   46,   47,   51,   45,   24,   14,  352,  353,
 /*   750 */    39,   37,  278,  359,   12,   25,  219,  331,  331,  331,
 /*   760 */   331,  331,  331,  331,  331,  102,  117,  331,  360,  361,
 /*   770 */   358,  357,  354,  355,  356,  342,  341,  328,  329,  330,
 /*   780 */   320,  320,  331,  331,  331,  331,  331,  331,  331,  331,
 /*   790 */   331,  331,  331,  331,  331,  331,   46,   47,   51,   45,
 /*   800 */    24,   14,  352,  353,   39,   37,  278,  359,   12,   25,
 /*   810 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*   820 */   158,  331,  360,  361,  358,  357,  354,  355,  356,  342,
 /*   830 */   341,  328,  329,  330,  331,  331,  331,  331,   46,   47,
 /*   840 */    51,   45,   24,   14,  352,  353,   39,   37,  278,  359,
 /*   850 */    12,   25,  331,  331,  331,  331,  331,  331,  211,  331,
 /*   860 */   331,  331,  331,   10,  360,  361,  358,  357,  354,  355,
 /*   870 */   356,  342,  341,  328,  329,  330,  331,  331,  331,  331,
 /*   880 */   331,  331,  331,    9,  142,  212,  331,  331,    5,  108,
 /*   890 */   331,  246,  331,  331,  126,  157,  183,  331,  259,  123,
 /*   900 */   256,  331,  250,  331,   23,  283,  331,   52,  277,  331,
 /*   910 */   331,  255,  350,  348,  331,  345,  331,  279,  180,  178,
 /*   920 */   331,  331,   49,   50,  296,  240,  351,  283,  283,  106,
 /*   930 */     1,  274,  331,  147,  331,  331,  331,  331,  331,  279,
 /*   940 */   279,    9,  144,   92,   96,  233,    5,  108,  331,  345,
 /*   950 */   331,  331,  126,  331,  331,  246,  259,  323,  256,  146,
 /*   960 */   250,  331,   23,  123,  184,   52,  331,  331,  331,  331,
 /*   970 */   246,  331,  343,  283,  153,  255,  350,  348,  123,  345,
 /*   980 */    49,   50,  296,  240,  351,  279,  331,  106,    1,  331,
 /*   990 */   255,  350,  348,  331,  345,   33,  331,  280,  331,    9,
 /*  1000 */   142,  224,   96,  331,    5,  108,  331,   30,  331,  247,
 /*  1010 */   126,  246,  331,   15,  259,  149,  256,  331,  250,  123,
 /*  1020 */    23,  331,  331,   52,  331,  331,  331,  331,  331,  331,
 /*  1030 */   331,  255,  350,  348,  331,  345,  331,  331,   49,   50,
 /*  1040 */   296,  240,  351,  331,  331,  106,    1,  331,  331,  331,
 /*  1050 */   331,  331,   33,  331,  280,  331,  331,    9,  135,  224,
 /*  1060 */    96,  331,    5,  108,   30,  246,  258,  331,  126,  151,
 /*  1070 */    15,  246,  259,  123,  256,  154,  250,  331,   11,  123,
 /*  1080 */   331,   52,  331,  331,  331,  255,  350,  348,  331,  345,
 /*  1090 */   331,  255,  350,  348,  331,  345,   49,   50,  296,  240,
 /*  1100 */   351,  331,  331,  106,    1,  331,  331,  331,  331,  331,
 /*  1110 */   331,  331,  331,  331,  331,    9,  142,  210,   96,  331,
 /*  1120 */     5,  108,  331,  331,  331,  331,  126,  246,  331,  331,
 /*  1130 */   259,  155,  256,  331,  216,  123,   23,  331,  331,   52,
 /*  1140 */   331,  331,  331,  331,  331,  331,  331,  255,  350,  348,
 /*  1150 */   331,  345,  331,  331,   49,   50,  296,  240,  351,  331,
 /*  1160 */   331,  106,    1,  331,  331,  331,  331,  331,  331,  331,
 /*  1170 */   331,  331,  331,    9,  131,  224,   96,  331,    5,  108,
 /*  1180 */   331,  331,  331,  331,  126,  246,  331,  331,  259,  152,
 /*  1190 */   256,  331,  250,  123,    3,  331,  331,   52,  331,  331,
 /*  1200 */   331,  331,  331,  331,  331,  255,  350,  348,  331,  345,
 /*  1210 */   331,  331,   49,   50,  296,  240,  351,  331,  331,  106,
 /*  1220 */     1,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1230 */   331,    9,  142,  213,   96,  331,    5,  108,  331,  331,
 /*  1240 */   331,  331,  126,  246,  331,  331,  259,  150,  256,  331,
 /*  1250 */   250,  123,   23,  331,  331,   52,  331,  331,  331,  331,
 /*  1260 */   331,  331,  331,  255,  350,  348,  331,  345,  331,  331,
 /*  1270 */    49,   50,  296,  240,  351,  331,  331,  106,    1,  331,
 /*  1280 */   219,  331,  401,  331,  331,  331,  331,  331,  331,    9,
 /*  1290 */   142,  209,   96,  331,    5,  108,  331,  331,  331,  331,
 /*  1300 */   126,  249,  331,  331,  259,  331,  256,  331,  250,   30,
 /*  1310 */    23,  190,  163,   52,  331,   15,  331,  331,    2,  331,
 /*  1320 */   331,  283,  331,  331,   20,   22,  331,  331,   49,   50,
 /*  1330 */   296,  240,  351,  331,  331,  106,    1,  331,  207,  331,
 /*  1340 */   331,  145,  331,  331,  331,  432,  331,    9,  139,  224,
 /*  1350 */    96,  331,    5,  108,  331,  331,  331,  331,  126,  331,
 /*  1360 */   331,  331,  259,  243,  256,  331,  250,  331,   23,  190,
 /*  1370 */   188,   52,  432,  331,  331,  331,  331,  331,  432,  283,
 /*  1380 */   331,    2,   20,   22,  331,  331,   49,   50,  296,  240,
 /*  1390 */   351,  331,  331,  106,    1,  331,  207,  331,  331,  331,
 /*  1400 */   331,  331,  331,  331,  145,    9,  135,  224,   96,  331,
 /*  1410 */     5,  108,  331,  331,  331,  331,  126,  331,  331,  331,
 /*  1420 */   259,  331,  256,  331,  250,  331,   11,  101,  160,   52,
 /*  1430 */   331,  331,  331,  331,  331,  331,  331,  283,  331,  331,
 /*  1440 */    20,   22,  331,  331,   49,   50,  296,  240,  351,  331,
 /*  1450 */   331,  106,  331,  331,  207,  331,  331,  331,  331,  331,
 /*  1460 */   331,  331,  331,    9,  135,  225,   96,  331,    5,  108,
 /*  1470 */   331,  331,  331,  331,  126,  331,  331,  331,  259,  331,
 /*  1480 */   256,  331,  250,  331,   11,  331,  477,   52,  331,  331,
 /*  1490 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1500 */   331,  331,   49,   50,  296,  240,  351,  331,  477,  106,
 /*  1510 */   477,  477,  331,  477,  477,  331,  331,  331,  331,  477,
 /*  1520 */   331,  477,    2,  477,   96,  331,  331,  331,  331,  331,
 /*  1530 */   331,  331,  331,  331,  331,  246,  331,  331,  477,  120,
 /*  1540 */   331,  331,   84,  123,  331,  145,  331,  331,  331,  477,
 /*  1550 */   331,  294,  327,  331,  331,  255,  350,  348,  331,  345,
 /*  1560 */   331,  331,  331,  477,  331,  331,  331,  246,  331,  218,
 /*  1570 */   362,  120,  331,  331,   84,  123,  331,  331,  331,  331,
 /*  1580 */   331,  331,  331,  294,  327,  331,  331,  255,  350,  348,
 /*  1590 */   246,  345,  331,  331,  129,  331,  331,   61,  119,  232,
 /*  1600 */   331,  246,  335,  331,  331,  129,  294,  327,   80,  123,
 /*  1610 */   255,  350,  348,  331,  345,  331,  331,  294,  327,  331,
 /*  1620 */   331,  255,  350,  348,  331,  345,  246,  331,  331,  331,
 /*  1630 */   129,  331,  215,   80,  123,  331,  331,  331,  331,  331,
 /*  1640 */   331,  331,  294,  327,  331,  331,  255,  350,  348,  331,
 /*  1650 */   345,  331,  331,  331,  246,  190,  170,  221,  129,  331,
 /*  1660 */   331,   55,  119,  133,  331,  283,  331,  331,   20,   22,
 /*  1670 */   294,  327,  331,  331,  255,  350,  348,  246,  345,  331,
 /*  1680 */   331,  129,  207,  331,   80,  123,  331,  331,  331,  331,
 /*  1690 */   331,  331,  331,  294,  327,  331,  246,  255,  350,  348,
 /*  1700 */   129,  345,  331,   89,  123,  331,  331,  331,  223,  331,
 /*  1710 */   331,  331,  294,  327,  331,  331,  255,  350,  348,  246,
 /*  1720 */   345,  331,  331,  129,  331,  331,   70,  123,  331,  331,
 /*  1730 */   246,  331,  331,  331,  111,  294,  327,   67,  123,  255,
 /*  1740 */   350,  348,  331,  345,  331,  331,  294,  327,  331,  246,
 /*  1750 */   255,  350,  348,  129,  345,  331,   86,  123,  331,  331,
 /*  1760 */   331,  331,  331,  331,  331,  294,  327,  331,  246,  255,
 /*  1770 */   350,  348,  129,  345,  331,   90,  123,  331,  331,  331,
 /*  1780 */   331,  331,  331,  331,  294,  327,  331,  246,  255,  350,
 /*  1790 */   348,  129,  345,  331,   77,  123,  331,  331,  331,  331,
 /*  1800 */   331,  331,  331,  294,  327,  331,  246,  255,  350,  348,
 /*  1810 */   129,  345,  331,   74,  123,  331,  331,  246,  331,  331,
 /*  1820 */   331,  129,  294,  327,   66,  123,  255,  350,  348,  331,
 /*  1830 */   345,  331,  331,  294,  327,  331,  246,  222,  350,  348,
 /*  1840 */   129,  345,  331,   69,  123,  331,  331,  331,  331,  331,
 /*  1850 */   331,  331,  294,  327,  331,  246,  255,  350,  348,  129,
 /*  1860 */   345,  331,   78,  123,  331,  331,  331,  331,  331,  331,
 /*  1870 */   331,  294,  327,  331,  246,  255,  350,  348,  129,  345,
 /*  1880 */   331,   60,  123,  331,  331,  331,  331,  331,  331,  331,
 /*  1890 */   294,  327,  331,  246,  255,  350,  348,  129,  345,  331,
 /*  1900 */    53,  123,  331,  331,  246,  331,  331,  331,  129,  294,
 /*  1910 */   327,   65,  123,  255,  350,  348,  331,  345,  331,  331,
 /*  1920 */   294,  327,  336,  331,  255,  350,  348,  331,  345,    8,
 /*  1930 */   331,  331,  331,  331,    5,  108,  331,  331,  331,  331,
 /*  1940 */   126,  331,  331,  246,  259,  331,  256,  129,  331,  331,
 /*  1950 */    72,  123,  331,  331,  331,  331,  331,  331,  331,  294,
 /*  1960 */   327,  331,  246,  255,  350,  348,  129,  345,  331,   85,
 /*  1970 */   123,  331,  331,  331,  331,  331,  331,  331,  294,  327,
 /*  1980 */   331,  246,  255,  350,  348,  129,  345,  331,   81,  123,
 /*  1990 */   331,   19,  340,  331,  331,  331,  331,  294,  327,  331,
 /*  2000 */   246,  255,  350,  348,  113,  345,  331,   82,  123,  331,
 /*  2010 */   331,  246,  331,  331,  331,   93,  294,  327,   54,  121,
 /*  2020 */   255,  350,  348,  331,  345,  331,  331,  294,  327,  331,
 /*  2030 */   246,  217,  350,  348,  129,  345,  331,   58,  123,  331,
 /*  2040 */   331,  331,  331,  331,  331,  331,  294,  327,  331,  336,
 /*  2050 */   255,  350,  348,  331,  345,  331,    8,  331,  331,  331,
 /*  2060 */   331,    5,  108,  331,  331,  331,  331,  126,  246,  331,
 /*  2070 */   331,  259,  129,  256,  331,   88,  123,  331,  331,  246,
 /*  2080 */   331,  331,  331,  129,  294,  327,   56,  123,  255,  350,
 /*  2090 */   348,  331,  345,  331,  331,  294,  327,  331,  331,  255,
 /*  2100 */   350,  348,  331,  345,  246,  331,  331,  331,  129,  331,
 /*  2110 */   331,   68,  123,  331,  331,  331,  331,  325,   19,  340,
 /*  2120 */   294,  327,  331,  331,  255,  350,  348,  331,  345,  331,
 /*  2130 */   331,  331,  331,  246,  331,  331,  331,  118,  331,  331,
 /*  2140 */    59,  123,  331,  331,  331,  331,  190,  172,  331,  294,
 /*  2150 */   327,  331,  331,  255,  350,  348,  283,  345,  246,   20,
 /*  2160 */    22,  331,   93,  331,  331,   57,  121,  331,  331,  331,
 /*  2170 */   331,  331,  331,  207,  294,  327,  331,  246,  255,  350,
 /*  2180 */   348,  129,  345,  331,   64,  123,  331,  331,  246,  331,
 /*  2190 */   331,  331,  129,  294,  327,   63,  123,  255,  350,  348,
 /*  2200 */   331,  345,  331,  331,  294,  327,  331,  246,  255,  350,
 /*  2210 */   348,  129,  345,  331,   73,  123,  331,  331,  331,  331,
 /*  2220 */   190,  165,  331,  294,  327,  331,  331,  255,  350,  348,
 /*  2230 */   283,  345,  331,   20,   22,  331,  246,  331,  331,  331,
 /*  2240 */   129,  331,  331,   87,  123,  331,  331,  207,  331,  331,
 /*  2250 */   331,  331,  294,  327,  331,  331,  255,  350,  348,  331,
 /*  2260 */   345,  246,  331,  331,  331,  129,  331,  331,   75,  123,
 /*  2270 */   331,  331,  246,  331,  331,  331,  129,  294,  327,   61,
 /*  2280 */   123,  255,  350,  348,  331,  345,  331,  331,  294,  327,
 /*  2290 */   331,  246,  255,  350,  348,  129,  345,  331,   71,  123,
 /*  2300 */   331,  331,  246,  331,  331,  331,  129,  294,  327,   83,
 /*  2310 */   123,  255,  350,  348,  331,  345,  331,  331,  294,  327,
 /*  2320 */   331,  331,  255,  350,  348,  331,  345,  246,  331,  331,
 /*  2330 */   331,  112,  331,  331,   76,  123,  331,  331,  331,  331,
 /*  2340 */   331,  331,  331,  294,  327,  331,  331,  255,  350,  348,
 /*  2350 */   331,  345,  246,  331,  331,  331,  129,  331,  331,   91,
 /*  2360 */   123,  331,  331,  246,  331,  331,  331,  129,  294,  327,
 /*  2370 */    62,  123,  255,  350,  348,  331,  345,  331,  331,  294,
 /*  2380 */   327,  331,  246,  255,  350,  348,  129,  345,  331,   79,
 /*  2390 */   123,  331,  331,  331,  331,  331,  331,  331,  294,  327,
 /*  2400 */   331,  331,  255,  350,  348,  331,  345,
    ];
    self.yy_lookahead = [
 /*     0 */     1,    4,    5,    6,    7,    8,    9,   10,   11,   12,
 /*    10 */    13,   14,   15,   30,   66,   18,   18,    2,   20,   36,
 /*    20 */    23,   24,   94,   95,   96,   39,   29,   28,   30,   30,
 /*    30 */    33,   60,   35,   60,   36,   36,   65,   18,   65,   20,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,   52,   53,   54,    1,    1,    3,    3,    1,   91,
 /*    60 */     3,   83,   84,   85,   86,   87,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   76,   77,   78,  112,    1,
 /*    80 */   114,  115,   63,   30,   30,   31,  118,   30,   19,   36,
 /*    90 */    36,   21,   22,   36,   41,   42,   43,   44,   45,   46,
 /*   100 */    47,   48,   49,   50,   51,   52,   53,   54,    1,   55,
 /*   110 */    32,    1,   55,    3,   91,   39,   18,   19,   20,   38,
 /*   120 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   130 */    77,   78,   62,   55,   20,   37,   60,   30,   62,   20,
 /*   140 */    30,  118,   66,   36,  114,  115,   36,   66,   41,   42,
 /*   150 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   160 */    53,   54,    1,   26,    1,   55,    3,   37,    1,   18,
 /*   170 */     3,   20,   21,   91,   67,   68,   69,   70,   71,   72,
 /*   180 */    73,   74,   75,   76,   77,   78,    5,    6,    7,    8,
 /*   190 */     9,   20,    1,   30,    3,  100,   15,   16,   17,   36,
 /*   200 */   118,  119,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   210 */    49,   50,   51,   52,   53,   54,    1,   18,   55,   20,
 /*   220 */    21,   30,   55,  114,  115,   26,   22,   36,   67,   68,
 /*   230 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   240 */    86,   80,   32,   26,   91,   92,   31,    1,  109,   39,
 /*   250 */    38,   18,   40,   20,  101,  116,   41,   42,   43,   44,
 /*   260 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   270 */     1,  118,   62,   18,   19,   20,  122,  123,   85,   86,
 /*   280 */    87,   91,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   290 */    75,   76,   77,   78,  104,  105,   63,   80,    1,   91,
 /*   300 */    92,   55,    3,   18,  115,   20,   21,   20,  118,  101,
 /*   310 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   320 */    51,   52,   53,   54,    1,   26,  118,   30,   38,   88,
 /*   330 */    40,   39,   38,   36,   40,   66,   67,   68,   69,   70,
 /*   340 */    71,   72,   73,   74,   75,   76,   77,   78,   63,   21,
 /*   350 */    63,  109,   91,   92,   62,    1,    2,   16,  116,   19,
 /*   360 */    20,   18,  101,   40,   41,   42,   43,   44,   45,   46,
 /*   370 */    47,   48,   49,   50,   51,   52,   53,   54,    1,  118,
 /*   380 */     3,   18,   39,   20,   19,   20,   19,  111,   60,  113,
 /*   390 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   400 */    77,   78,   21,   22,   64,   30,   39,   92,   92,   39,
 /*   410 */    18,   36,   20,   18,    1,   20,  101,  101,   41,   42,
 /*   420 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   430 */    53,   54,    1,  118,  118,   22,   87,    2,   89,   94,
 /*   440 */    95,   91,   98,   62,   67,   68,   69,   70,   71,   72,
 /*   450 */    73,   74,   75,   76,   77,   78,   21,  113,   86,  111,
 /*   460 */    92,   92,  111,   18,  113,   20,   20,  111,  118,  101,
 /*   470 */   101,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   480 */    49,   50,   51,   52,   53,   54,    1,  118,    3,  100,
 /*   490 */    94,   95,   18,  100,   20,  123,  111,   25,   67,   68,
 /*   500 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   510 */    38,   92,   92,   20,    3,    3,   92,   20,   40,   64,
 /*   520 */   101,  101,   19,    3,   19,  101,   41,   42,   43,   44,
 /*   530 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   540 */     1,    2,  118,   20,   19,   64,   20,   19,   21,   98,
 /*   550 */    20,   98,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   560 */    75,   76,   77,   78,  113,   22,  113,   60,   27,   20,
 /*   570 */    37,   20,   56,    2,  101,    1,  112,  111,  116,  111,
 /*   580 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   590 */    51,   52,   53,   54,    1,  113,   97,  118,    2,  119,
 /*   600 */   111,   97,   30,  124,   98,   62,   67,   68,   69,   70,
 /*   610 */    71,   72,   73,   74,   75,   76,   77,   78,   25,  113,
 /*   620 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*   630 */   124,  124,  124,  124,   41,   42,   43,   44,   45,   46,
 /*   640 */    47,   48,   49,   50,   51,   52,   53,   54,    1,  124,
 /*   650 */     3,  124,  124,  124,  124,  124,  124,  124,   99,   98,
 /*   660 */    67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   670 */    77,   78,  113,  124,  113,  124,  124,  124,  124,  124,
 /*   680 */   124,  124,  124,  124,  124,  124,  124,  124,   41,   42,
 /*   690 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   700 */    53,   54,    1,  124,    3,  124,  124,  124,  124,  124,
 /*   710 */   124,   98,   98,   98,   67,   68,   69,   70,   71,   72,
 /*   720 */    73,   74,   75,   76,   77,   78,  113,  113,  113,  124,
 /*   730 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*   740 */   124,  124,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   750 */    49,   50,   51,   52,   53,   54,    1,  124,  124,  124,
 /*   760 */   124,  124,  124,  124,  124,   98,   98,  124,   67,   68,
 /*   770 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   780 */   113,  113,  124,  124,  124,  124,  124,  124,  124,  124,
 /*   790 */   124,  124,  124,  124,  124,  124,   41,   42,   43,   44,
 /*   800 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   810 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*   820 */    22,  124,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   830 */    75,   76,   77,   78,  124,  124,  124,  124,   41,   42,
 /*   840 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   850 */    53,   54,  124,  124,  124,  124,  124,  124,   60,  124,
 /*   860 */   124,  124,  124,   65,   67,   68,   69,   70,   71,   72,
 /*   870 */    73,   74,   75,   76,   77,   78,  124,  124,  124,  124,
 /*   880 */   124,  124,  124,   18,   19,   20,  124,  124,   23,   24,
 /*   890 */   124,   86,  124,  124,   29,   90,   92,  124,   33,   94,
 /*   900 */    35,  124,   37,  124,   39,  101,  124,   42,  103,  124,
 /*   910 */   124,  106,  107,  108,  124,  110,  124,  113,   92,   92,
 /*   920 */   124,  124,   57,   58,   59,   60,   61,  101,  101,   64,
 /*   930 */    65,   66,  124,   94,  124,  124,  124,  124,  124,  113,
 /*   940 */   113,   18,   19,   20,   79,  106,   23,   24,  124,  110,
 /*   950 */   124,  124,   29,  124,  124,   86,   33,   34,   35,   90,
 /*   960 */    37,  124,   39,   94,   92,   42,  124,  124,  124,  124,
 /*   970 */    86,  124,  103,  101,   90,  106,  107,  108,   94,  110,
 /*   980 */    57,   58,   59,   60,   61,  113,  124,   64,   65,  124,
 /*   990 */   106,  107,  108,  124,  110,   18,  124,   20,  124,   18,
 /*  1000 */    19,   20,   79,  124,   23,   24,  124,   30,  124,   32,
 /*  1010 */    29,   86,  124,   36,   33,   90,   35,  124,   37,   94,
 /*  1020 */    39,  124,  124,   42,  124,  124,  124,  124,  124,  124,
 /*  1030 */   124,  106,  107,  108,  124,  110,  124,  124,   57,   58,
 /*  1040 */    59,   60,   61,  124,  124,   64,   65,  124,  124,  124,
 /*  1050 */   124,  124,   18,  124,   20,  124,  124,   18,   19,   20,
 /*  1060 */    79,  124,   23,   24,   30,   86,   32,  124,   29,   90,
 /*  1070 */    36,   86,   33,   94,   35,   90,   37,  124,   39,   94,
 /*  1080 */   124,   42,  124,  124,  124,  106,  107,  108,  124,  110,
 /*  1090 */   124,  106,  107,  108,  124,  110,   57,   58,   59,   60,
 /*  1100 */    61,  124,  124,   64,   65,  124,  124,  124,  124,  124,
 /*  1110 */   124,  124,  124,  124,  124,   18,   19,   20,   79,  124,
 /*  1120 */    23,   24,  124,  124,  124,  124,   29,   86,  124,  124,
 /*  1130 */    33,   90,   35,  124,   37,   94,   39,  124,  124,   42,
 /*  1140 */   124,  124,  124,  124,  124,  124,  124,  106,  107,  108,
 /*  1150 */   124,  110,  124,  124,   57,   58,   59,   60,   61,  124,
 /*  1160 */   124,   64,   65,  124,  124,  124,  124,  124,  124,  124,
 /*  1170 */   124,  124,  124,   18,   19,   20,   79,  124,   23,   24,
 /*  1180 */   124,  124,  124,  124,   29,   86,  124,  124,   33,   90,
 /*  1190 */    35,  124,   37,   94,   39,  124,  124,   42,  124,  124,
 /*  1200 */   124,  124,  124,  124,  124,  106,  107,  108,  124,  110,
 /*  1210 */   124,  124,   57,   58,   59,   60,   61,  124,  124,   64,
 /*  1220 */    65,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*  1230 */   124,   18,   19,   20,   79,  124,   23,   24,  124,  124,
 /*  1240 */   124,  124,   29,   86,  124,  124,   33,   90,   35,  124,
 /*  1250 */    37,   94,   39,  124,  124,   42,  124,  124,  124,  124,
 /*  1260 */   124,  124,  124,  106,  107,  108,  124,  110,  124,  124,
 /*  1270 */    57,   58,   59,   60,   61,  124,  124,   64,   65,  124,
 /*  1280 */     1,  124,    3,  124,  124,  124,  124,  124,  124,   18,
 /*  1290 */    19,   20,   79,  124,   23,   24,  124,  124,  124,  124,
 /*  1300 */    29,   22,  124,  124,   33,  124,   35,  124,   37,   30,
 /*  1310 */    39,   91,   92,   42,  124,   36,  124,  124,   39,  124,
 /*  1320 */   124,  101,  124,  124,  104,  105,  124,  124,   57,   58,
 /*  1330 */    59,   60,   61,  124,  124,   64,   65,  124,  118,  124,
 /*  1340 */   124,   62,  124,  124,  124,    3,  124,   18,   19,   20,
 /*  1350 */    79,  124,   23,   24,  124,  124,  124,  124,   29,  124,
 /*  1360 */   124,  124,   33,   21,   35,  124,   37,  124,   39,   91,
 /*  1370 */    92,   42,   30,  124,  124,  124,  124,  124,   36,  101,
 /*  1380 */   124,   39,  104,  105,  124,  124,   57,   58,   59,   60,
 /*  1390 */    61,  124,  124,   64,   65,  124,  118,  124,  124,  124,
 /*  1400 */   124,  124,  124,  124,   62,   18,   19,   20,   79,  124,
 /*  1410 */    23,   24,  124,  124,  124,  124,   29,  124,  124,  124,
 /*  1420 */    33,  124,   35,  124,   37,  124,   39,   91,   92,   42,
 /*  1430 */   124,  124,  124,  124,  124,  124,  124,  101,  124,  124,
 /*  1440 */   104,  105,  124,  124,   57,   58,   59,   60,   61,  124,
 /*  1450 */   124,   64,  124,  124,  118,  124,  124,  124,  124,  124,
 /*  1460 */   124,  124,  124,   18,   19,   20,   79,  124,   23,   24,
 /*  1470 */   124,  124,  124,  124,   29,  124,  124,  124,   33,  124,
 /*  1480 */    35,  124,   37,  124,   39,  124,    3,   42,  124,  124,
 /*  1490 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*  1500 */   124,  124,   57,   58,   59,   60,   61,  124,   25,   64,
 /*  1510 */    27,   28,  124,   30,   31,  124,  124,  124,  124,   36,
 /*  1520 */   124,   38,   39,   40,   79,  124,  124,  124,  124,  124,
 /*  1530 */   124,  124,  124,  124,  124,   86,  124,  124,   55,   90,
 /*  1540 */   124,  124,   93,   94,  124,   62,  124,  124,  124,   66,
 /*  1550 */   124,  102,  103,  124,  124,  106,  107,  108,  124,  110,
 /*  1560 */   124,  124,  124,   80,  124,  124,  124,   86,  124,  120,
 /*  1570 */   121,   90,  124,  124,   93,   94,  124,  124,  124,  124,
 /*  1580 */   124,  124,  124,  102,  103,  124,  124,  106,  107,  108,
 /*  1590 */    86,  110,  124,  124,   90,  124,  124,   93,   94,   95,
 /*  1600 */   124,   86,  121,  124,  124,   90,  102,  103,   93,   94,
 /*  1610 */   106,  107,  108,  124,  110,  124,  124,  102,  103,  124,
 /*  1620 */   124,  106,  107,  108,  124,  110,   86,  124,  124,  124,
 /*  1630 */    90,  124,  117,   93,   94,  124,  124,  124,  124,  124,
 /*  1640 */   124,  124,  102,  103,  124,  124,  106,  107,  108,  124,
 /*  1650 */   110,  124,  124,  124,   86,   91,   92,  117,   90,  124,
 /*  1660 */   124,   93,   94,   95,  124,  101,  124,  124,  104,  105,
 /*  1670 */   102,  103,  124,  124,  106,  107,  108,   86,  110,  124,
 /*  1680 */   124,   90,  118,  124,   93,   94,  124,  124,  124,  124,
 /*  1690 */   124,  124,  124,  102,  103,  124,   86,  106,  107,  108,
 /*  1700 */    90,  110,  124,   93,   94,  124,  124,  124,  117,  124,
 /*  1710 */   124,  124,  102,  103,  124,  124,  106,  107,  108,   86,
 /*  1720 */   110,  124,  124,   90,  124,  124,   93,   94,  124,  124,
 /*  1730 */    86,  124,  124,  124,   90,  102,  103,   93,   94,  106,
 /*  1740 */   107,  108,  124,  110,  124,  124,  102,  103,  124,   86,
 /*  1750 */   106,  107,  108,   90,  110,  124,   93,   94,  124,  124,
 /*  1760 */   124,  124,  124,  124,  124,  102,  103,  124,   86,  106,
 /*  1770 */   107,  108,   90,  110,  124,   93,   94,  124,  124,  124,
 /*  1780 */   124,  124,  124,  124,  102,  103,  124,   86,  106,  107,
 /*  1790 */   108,   90,  110,  124,   93,   94,  124,  124,  124,  124,
 /*  1800 */   124,  124,  124,  102,  103,  124,   86,  106,  107,  108,
 /*  1810 */    90,  110,  124,   93,   94,  124,  124,   86,  124,  124,
 /*  1820 */   124,   90,  102,  103,   93,   94,  106,  107,  108,  124,
 /*  1830 */   110,  124,  124,  102,  103,  124,   86,  106,  107,  108,
 /*  1840 */    90,  110,  124,   93,   94,  124,  124,  124,  124,  124,
 /*  1850 */   124,  124,  102,  103,  124,   86,  106,  107,  108,   90,
 /*  1860 */   110,  124,   93,   94,  124,  124,  124,  124,  124,  124,
 /*  1870 */   124,  102,  103,  124,   86,  106,  107,  108,   90,  110,
 /*  1880 */   124,   93,   94,  124,  124,  124,  124,  124,  124,  124,
 /*  1890 */   102,  103,  124,   86,  106,  107,  108,   90,  110,  124,
 /*  1900 */    93,   94,  124,  124,   86,  124,  124,  124,   90,  102,
 /*  1910 */   103,   93,   94,  106,  107,  108,  124,  110,  124,  124,
 /*  1920 */   102,  103,   11,  124,  106,  107,  108,  124,  110,   18,
 /*  1930 */   124,  124,  124,  124,   23,   24,  124,  124,  124,  124,
 /*  1940 */    29,  124,  124,   86,   33,  124,   35,   90,  124,  124,
 /*  1950 */    93,   94,  124,  124,  124,  124,  124,  124,  124,  102,
 /*  1960 */   103,  124,   86,  106,  107,  108,   90,  110,  124,   93,
 /*  1970 */    94,  124,  124,  124,  124,  124,  124,  124,  102,  103,
 /*  1980 */   124,   86,  106,  107,  108,   90,  110,  124,   93,   94,
 /*  1990 */    79,   80,   81,  124,  124,  124,  124,  102,  103,  124,
 /*  2000 */    86,  106,  107,  108,   90,  110,  124,   93,   94,  124,
 /*  2010 */   124,   86,  124,  124,  124,   90,  102,  103,   93,   94,
 /*  2020 */   106,  107,  108,  124,  110,  124,  124,  102,  103,  124,
 /*  2030 */    86,  106,  107,  108,   90,  110,  124,   93,   94,  124,
 /*  2040 */   124,  124,  124,  124,  124,  124,  102,  103,  124,   11,
 /*  2050 */   106,  107,  108,  124,  110,  124,   18,  124,  124,  124,
 /*  2060 */   124,   23,   24,  124,  124,  124,  124,   29,   86,  124,
 /*  2070 */   124,   33,   90,   35,  124,   93,   94,  124,  124,   86,
 /*  2080 */   124,  124,  124,   90,  102,  103,   93,   94,  106,  107,
 /*  2090 */   108,  124,  110,  124,  124,  102,  103,  124,  124,  106,
 /*  2100 */   107,  108,  124,  110,   86,  124,  124,  124,   90,  124,
 /*  2110 */   124,   93,   94,  124,  124,  124,  124,   79,   80,   81,
 /*  2120 */   102,  103,  124,  124,  106,  107,  108,  124,  110,  124,
 /*  2130 */   124,  124,  124,   86,  124,  124,  124,   90,  124,  124,
 /*  2140 */    93,   94,  124,  124,  124,  124,   91,   92,  124,  102,
 /*  2150 */   103,  124,  124,  106,  107,  108,  101,  110,   86,  104,
 /*  2160 */   105,  124,   90,  124,  124,   93,   94,  124,  124,  124,
 /*  2170 */   124,  124,  124,  118,  102,  103,  124,   86,  106,  107,
 /*  2180 */   108,   90,  110,  124,   93,   94,  124,  124,   86,  124,
 /*  2190 */   124,  124,   90,  102,  103,   93,   94,  106,  107,  108,
 /*  2200 */   124,  110,  124,  124,  102,  103,  124,   86,  106,  107,
 /*  2210 */   108,   90,  110,  124,   93,   94,  124,  124,  124,  124,
 /*  2220 */    91,   92,  124,  102,  103,  124,  124,  106,  107,  108,
 /*  2230 */   101,  110,  124,  104,  105,  124,   86,  124,  124,  124,
 /*  2240 */    90,  124,  124,   93,   94,  124,  124,  118,  124,  124,
 /*  2250 */   124,  124,  102,  103,  124,  124,  106,  107,  108,  124,
 /*  2260 */   110,   86,  124,  124,  124,   90,  124,  124,   93,   94,
 /*  2270 */   124,  124,   86,  124,  124,  124,   90,  102,  103,   93,
 /*  2280 */    94,  106,  107,  108,  124,  110,  124,  124,  102,  103,
 /*  2290 */   124,   86,  106,  107,  108,   90,  110,  124,   93,   94,
 /*  2300 */   124,  124,   86,  124,  124,  124,   90,  102,  103,   93,
 /*  2310 */    94,  106,  107,  108,  124,  110,  124,  124,  102,  103,
 /*  2320 */   124,  124,  106,  107,  108,  124,  110,   86,  124,  124,
 /*  2330 */   124,   90,  124,  124,   93,   94,  124,  124,  124,  124,
 /*  2340 */   124,  124,  124,  102,  103,  124,  124,  106,  107,  108,
 /*  2350 */   124,  110,   86,  124,  124,  124,   90,  124,  124,   93,
 /*  2360 */    94,  124,  124,   86,  124,  124,  124,   90,  102,  103,
 /*  2370 */    93,   94,  106,  107,  108,  124,  110,  124,  124,  102,
 /*  2380 */   103,  124,   86,  106,  107,  108,   90,  110,  124,   93,
 /*  2390 */    94,  124,  124,  124,  124,  124,  124,  124,  102,  103,
 /*  2400 */   124,  124,  106,  107,  108,  124,  110,
    ];
    self.YY_SHIFT_USE_DFLT = -53;
    self.YY_SHIFT_MAX = 259;
    self.yy_shift_ofst = [
 /*     0 */    -3, 1213,  981, 1155, 1213, 1155,  981,  981,  923,  923,
 /*    10 */   865,  981,  981, 1097,  981,  981,  981,  981,  981,  981,
 /*    20 */   981, 1329,  981,  981,  981,  981, 1271,  981,  981,  981,
 /*    30 */  1097,  981,  981,  981,  981,  981,  981,  981,  981,  981,
 /*    40 */   981,  981,  981,  981, 1039, 1039, 1387, 1387, 1445, 1387,
 /*    50 */  1387, 1387, 1387,   -1,   53,  107,  107,  107,  107,  107,
 /*    60 */   485,  431,  593,  647,  701,  323,  161,  215,  377,  269,
 /*    70 */   539,  755,  755,  755,  755,  755,  755,  755,  755,  755,
 /*    80 */   755,  755,  755,  755,  755,  755,  755,  755,  755,  755,
 /*    90 */   797,  797, 1279,  110,  297,   -3, 2038,  977, 1034,  191,
 /*   100 */    -2,  191,   -2,  297,  297,  798,  340,  354,  367, 1911,
 /*   110 */   181,   54,   57,  163,  199,  285,   19,  151,  167,   70,
 /*   120 */    78,  381,  367,  543,  363,  -17,  375,  365,  363,  246,
 /*   130 */   363,  395,  392,  -17,  363,  363,  363,  367,  363,  445,
 /*   140 */   413,  363,  395,  363,  474,  365,  574,  204,  204,  574,
 /*   150 */   574,  574,  574,  574,  574,  574,  574,  -53,  255,  233,
 /*   160 */   -17,  -27,  -29,  -17,  -17,  -17,  -29,  -17,  -29,  -27,
 /*   170 */   -17,  -17,  -17,  -29,  -17,  -17,  -29,  -17,  -17,  -17,
 /*   180 */   -17,  -17,  -17,  -17,  -17,  -17,  -29,  -29,  -17,  343,
 /*   190 */   574,  574,  574,  596,  596,  574,  574,  204,  572,  572,
 /*   200 */   204,  341,  204,  370,  -53,  -53,  -53,  -53,  -53, 1483,
 /*   210 */  1342,   98,   76,  210,  435,  212,  328,  299,   81,  287,
 /*   220 */   472,  294,  217,  290,  292,  292,  370,  511,  455,  505,
 /*   230 */   520,  528,  478,  481,  541,  527,  446,   15,  114,  -14,
 /*   240 */   533,  130,  493,  497,  503,  523,  512,  525,  549,  551,
 /*   250 */   507,  526,  530,  516,  571,  137,  119,  -52,   69,  171,
    ];
    self.YY_REDUCE_USE_DFLT = -73;
    self.YY_REDUCE_MAX = 208;
    self.yy_reduce_ofst = [
 /*     0 */   -22, 1449, 1540, 1504, 1481, 1568, 1515, 1591, 1925, 2072,
 /*    10 */  1750, 1818, 1895, 1644, 1663, 1914, 2205, 2277, 1876, 1731,
 /*    20 */  1857, 1633, 1701, 2186, 2150, 2296, 2266, 2091, 2047, 1993,
 /*    30 */  2241, 2102, 1720, 1788, 1982, 1769, 1807, 1610, 1682, 2175,
 /*    40 */  2216, 2121, 1944, 2018,  805,  869,  884,  979,  925,  985,
 /*    50 */  1041, 1157, 1099, 1220, 1336, 2129, 1278, 1336, 1564, 2055,
 /*    60 */   190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
 /*    70 */   190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
 /*    80 */   190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
 /*    90 */   190,  190,  261,  208,  153,  193,  154,  827,  826,  369,
 /*   100 */   804,  315,  872,  316,  424,  -34,  839,   82,  -72,  372,
 /*   110 */   349,  -32,  -32,  -32,  559,  351,  351,  351,  -32,   30,
 /*   120 */   -32,   30,  345,   30,  453,  420,  368,  242,  344,  -32,
 /*   130 */   276,  561,  451,  419,  506,  615,  668,  396,  613,  615,
 /*   140 */   350,  614,  615,  667,  615,  139,  -32,   30,  109,  -32,
 /*   150 */   -32,  -32,  -32,  -32,  -32,  -32,   23,  -32,  462,  482,
 /*   160 */   473,  466,  464,  473,  473,  473,  464,  473,  464,  468,
 /*   170 */   473,  473,  473,  464,  473,  473,  464,  473,  473,  473,
 /*   180 */   473,  473,  473,  473,  473,  473,  464,  464,  473,  489,
 /*   190 */   479,  479,  479,  480,  480,  479,  479,  189,  504,  499,
 /*   200 */   189,  241,  189,  348,  356,  393,  389,   95,  385,
    ];
    self.yyExpectedTokens = [
        /* 0 */ [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35, ],
        /* 1 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 2 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 3 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 4 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 5 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 6 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 7 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 8 */ [18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 9 */ [18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 10 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 66, 79, ],
        /* 11 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 12 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 13 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 14 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 15 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 16 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 17 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 18 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 19 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 20 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 21 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 22 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 23 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 24 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 25 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 26 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 27 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 28 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 29 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 30 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 31 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 32 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 33 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 34 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 35 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 36 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 37 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 38 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 39 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 40 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 41 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 42 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 43 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 44 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 45 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ],
        /* 46 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ],
        /* 47 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ],
        /* 48 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ],
        /* 49 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ],
        /* 50 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ],
        /* 51 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ],
        /* 52 */ [18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ],
        /* 53 */ [1, 28, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 54 */ [1, 3, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 55 */ [1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 56 */ [1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 57 */ [1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 58 */ [1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 59 */ [1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 60 */ [1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 61 */ [1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 62 */ [1, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 63 */ [1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 64 */ [1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 65 */ [1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 66 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, ],
        /* 67 */ [1, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 68 */ [1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 69 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 70 */ [1, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 71 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 72 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 73 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 74 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 75 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 76 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 77 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 78 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 79 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 80 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 81 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 82 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 83 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 84 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 85 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 86 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 87 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 88 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 89 */ [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 90 */ [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 91 */ [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ],
        /* 92 */ [1, 3, 22, 30, 36, 39, 62, ],
        /* 93 */ [1, 3, 30, 36, 55, ],
        /* 94 */ [1, 30, 36, ],
        /* 95 */ [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35, ],
        /* 96 */ [11, 18, 23, 24, 29, 33, 35, 79, 80, 81, ],
        /* 97 */ [18, 20, 30, 32, 36, ],
        /* 98 */ [18, 20, 30, 32, 36, ],
        /* 99 */ [1, 3, 30, 36, ],
        /* 100 */ [18, 20, 30, 36, ],
        /* 101 */ [1, 3, 30, 36, ],
        /* 102 */ [18, 20, 30, 36, ],
        /* 103 */ [1, 30, 36, ],
        /* 104 */ [1, 30, 36, ],
        /* 105 */ [22, 60, 65, ],
        /* 106 */ [19, 20, 64, ],
        /* 107 */ [1, 2, ],
        /* 108 */ [19, 39, ],
        /* 109 */ [11, 18, 23, 24, 29, 33, 35, 79, 80, 81, ],
        /* 110 */ [5, 6, 7, 8, 9, 15, 16, 17, ],
        /* 111 */ [1, 3, 30, 31, 36, 55, ],
        /* 112 */ [1, 3, 30, 36, 55, ],
        /* 113 */ [1, 3, 30, 36, 55, ],
        /* 114 */ [18, 20, 21, 26, ],
        /* 115 */ [18, 20, 21, 63, ],
        /* 116 */ [18, 20, 63, ],
        /* 117 */ [18, 20, 21, ],
        /* 118 */ [1, 3, 55, ],
        /* 119 */ [21, 22, 62, ],
        /* 120 */ [1, 32, 55, ],
        /* 121 */ [21, 22, 62, ],
        /* 122 */ [19, 39, ],
        /* 123 */ [22, 62, ],
        /* 124 */ [18, 20, ],
        /* 125 */ [30, 36, ],
        /* 126 */ [30, 36, ],
        /* 127 */ [19, 20, ],
        /* 128 */ [18, 20, ],
        /* 129 */ [1, 55, ],
        /* 130 */ [18, 20, ],
        /* 131 */ [18, 20, ],
        /* 132 */ [18, 20, ],
        /* 133 */ [30, 36, ],
        /* 134 */ [18, 20, ],
        /* 135 */ [18, 20, ],
        /* 136 */ [18, 20, ],
        /* 137 */ [19, 39, ],
        /* 138 */ [18, 20, ],
        /* 139 */ [18, 20, ],
        /* 140 */ [1, 22, ],
        /* 141 */ [18, 20, ],
        /* 142 */ [18, 20, ],
        /* 143 */ [18, 20, ],
        /* 144 */ [18, 20, ],
        /* 145 */ [19, 20, ],
        /* 146 */ [1, ],
        /* 147 */ [22, ],
        /* 148 */ [22, ],
        /* 149 */ [1, ],
        /* 150 */ [1, ],
        /* 151 */ [1, ],
        /* 152 */ [1, ],
        /* 153 */ [1, ],
        /* 154 */ [1, ],
        /* 155 */ [1, ],
        /* 156 */ [1, ],
        /* 157 */ [],
        /* 158 */ [18, 19, 20, ],
        /* 159 */ [18, 20, 63, ],
        /* 160 */ [30, 36, ],
        /* 161 */ [60, 65, ],
        /* 162 */ [60, 65, ],
        /* 163 */ [30, 36, ],
        /* 164 */ [30, 36, ],
        /* 165 */ [30, 36, ],
        /* 166 */ [60, 65, ],
        /* 167 */ [30, 36, ],
        /* 168 */ [60, 65, ],
        /* 169 */ [60, 65, ],
        /* 170 */ [30, 36, ],
        /* 171 */ [30, 36, ],
        /* 172 */ [30, 36, ],
        /* 173 */ [60, 65, ],
        /* 174 */ [30, 36, ],
        /* 175 */ [30, 36, ],
        /* 176 */ [60, 65, ],
        /* 177 */ [30, 36, ],
        /* 178 */ [30, 36, ],
        /* 179 */ [30, 36, ],
        /* 180 */ [30, 36, ],
        /* 181 */ [30, 36, ],
        /* 182 */ [30, 36, ],
        /* 183 */ [30, 36, ],
        /* 184 */ [30, 36, ],
        /* 185 */ [30, 36, ],
        /* 186 */ [60, 65, ],
        /* 187 */ [60, 65, ],
        /* 188 */ [30, 36, ],
        /* 189 */ [18, 39, ],
        /* 190 */ [1, ],
        /* 191 */ [1, ],
        /* 192 */ [1, ],
        /* 193 */ [2, ],
        /* 194 */ [2, ],
        /* 195 */ [1, ],
        /* 196 */ [1, ],
        /* 197 */ [22, ],
        /* 198 */ [30, ],
        /* 199 */ [30, ],
        /* 200 */ [22, ],
        /* 201 */ [16, ],
        /* 202 */ [22, ],
        /* 203 */ [39, ],
        /* 204 */ [],
        /* 205 */ [],
        /* 206 */ [],
        /* 207 */ [],
        /* 208 */ [],
        /* 209 */ [3, 25, 27, 28, 30, 31, 36, 38, 39, 40, 55, 62, 66, 80, ],
        /* 210 */ [3, 21, 30, 36, 39, 62, ],
        /* 211 */ [18, 19, 20, 37, ],
        /* 212 */ [39, 60, 62, 66, ],
        /* 213 */ [32, 39, 62, ],
        /* 214 */ [2, 21, ],
        /* 215 */ [38, 40, ],
        /* 216 */ [21, 60, ],
        /* 217 */ [3, 26, ],
        /* 218 */ [38, 66, ],
        /* 219 */ [20, 63, ],
        /* 220 */ [25, 38, ],
        /* 221 */ [38, 40, ],
        /* 222 */ [26, 80, ],
        /* 223 */ [38, 40, ],
        /* 224 */ [39, 62, ],
        /* 225 */ [39, 62, ],
        /* 226 */ [39, ],
        /* 227 */ [3, ],
        /* 228 */ [64, ],
        /* 229 */ [19, ],
        /* 230 */ [3, ],
        /* 231 */ [19, ],
        /* 232 */ [40, ],
        /* 233 */ [64, ],
        /* 234 */ [27, ],
        /* 235 */ [21, ],
        /* 236 */ [20, ],
        /* 237 */ [2, ],
        /* 238 */ [20, ],
        /* 239 */ [39, ],
        /* 240 */ [37, ],
        /* 241 */ [37, ],
        /* 242 */ [20, ],
        /* 243 */ [20, ],
        /* 244 */ [19, ],
        /* 245 */ [20, ],
        /* 246 */ [3, ],
        /* 247 */ [19, ],
        /* 248 */ [20, ],
        /* 249 */ [20, ],
        /* 250 */ [60, ],
        /* 251 */ [20, ],
        /* 252 */ [20, ],
        /* 253 */ [56, ],
        /* 254 */ [2, ],
        /* 255 */ [26, ],
        /* 256 */ [20, ],
        /* 257 */ [66, ],
        /* 258 */ [19, ],
        /* 259 */ [20, ],
        /* 260 */ [],
        /* 261 */ [],
        /* 262 */ [],
        /* 263 */ [],
        /* 264 */ [],
        /* 265 */ [],
        /* 266 */ [],
        /* 267 */ [],
        /* 268 */ [],
        /* 269 */ [],
        /* 270 */ [],
        /* 271 */ [],
        /* 272 */ [],
        /* 273 */ [],
        /* 274 */ [],
        /* 275 */ [],
        /* 276 */ [],
        /* 277 */ [],
        /* 278 */ [],
        /* 279 */ [],
        /* 280 */ [],
        /* 281 */ [],
        /* 282 */ [],
        /* 283 */ [],
        /* 284 */ [],
        /* 285 */ [],
        /* 286 */ [],
        /* 287 */ [],
        /* 288 */ [],
        /* 289 */ [],
        /* 290 */ [],
        /* 291 */ [],
        /* 292 */ [],
        /* 293 */ [],
        /* 294 */ [],
        /* 295 */ [],
        /* 296 */ [],
        /* 297 */ [],
        /* 298 */ [],
        /* 299 */ [],
        /* 300 */ [],
        /* 301 */ [],
        /* 302 */ [],
        /* 303 */ [],
        /* 304 */ [],
        /* 305 */ [],
        /* 306 */ [],
        /* 307 */ [],
        /* 308 */ [],
        /* 309 */ [],
        /* 310 */ [],
        /* 311 */ [],
        /* 312 */ [],
        /* 313 */ [],
        /* 314 */ [],
        /* 315 */ [],
        /* 316 */ [],
        /* 317 */ [],
        /* 318 */ [],
        /* 319 */ [],
        /* 320 */ [],
        /* 321 */ [],
        /* 322 */ [],
        /* 323 */ [],
        /* 324 */ [],
        /* 325 */ [],
        /* 326 */ [],
        /* 327 */ [],
        /* 328 */ [],
        /* 329 */ [],
        /* 330 */ [],
        /* 331 */ [],
        /* 332 */ [],
        /* 333 */ [],
        /* 334 */ [],
        /* 335 */ [],
        /* 336 */ [],
        /* 337 */ [],
        /* 338 */ [],
        /* 339 */ [],
        /* 340 */ [],
        /* 341 */ [],
        /* 342 */ [],
        /* 343 */ [],
        /* 344 */ [],
        /* 345 */ [],
        /* 346 */ [],
        /* 347 */ [],
        /* 348 */ [],
        /* 349 */ [],
        /* 350 */ [],
        /* 351 */ [],
        /* 352 */ [],
        /* 353 */ [],
        /* 354 */ [],
        /* 355 */ [],
        /* 356 */ [],
        /* 357 */ [],
        /* 358 */ [],
        /* 359 */ [],
        /* 360 */ [],
        /* 361 */ [],
        /* 362 */ [],
    ];
    self.yy_default = [
 /*     0 */   366,  551,  522,  568,  568,  568,  522,  522,  568,  568,
 /*    10 */   568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    20 */   568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    30 */   568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    40 */   568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
 /*    50 */   568,  568,  568,  428,  568,  405,  428,  428,  428,  397,
 /*    60 */   568,  568,  568,  568,  568,  568,  568,  433,  568,  568,
 /*    70 */   568,  553,  449,  520,  552,  457,  433,  452,  439,  462,
 /*    80 */   521,  461,  430,  435,  554,  438,  454,  453,  410,  458,
 /*    90 */   466,  465,  477,  441,  428,  363,  568,  428,  428,  485,
 /*   100 */   428,  448,  428,  428,  428,  534,  568,  419,  568,  568,
 /*   110 */   568,  441,  441,  441,  568,  495,  495,  495,  441,  486,
 /*   120 */   441,  486,  568,  486,  568,  428,  428,  568,  568,  441,
 /*   130 */   495,  568,  568,  407,  568,  568,  568,  568,  568,  568,
 /*   140 */   422,  568,  568,  568,  568,  568,  451,  486,  531,  464,
 /*   150 */   446,  445,  468,  444,  469,  470,  424,  529,  568,  496,
 /*   160 */   395,  489,  492,  412,  392,  406,  514,  409,  490,  491,
 /*   170 */   413,  394,  398,  513,  393,  408,  493,  400,  417,  402,
 /*   180 */   415,  404,  414,  418,  416,  403,  515,  512,  399,  495,
 /*   190 */   448,  420,  485,  523,  524,  423,  425,  532,  567,  567,
 /*   200 */   509,  383,  535,  495,  495,  528,  528,  528,  495,  443,
 /*   210 */   477,  568,  477,  477,  507,  568,  473,  467,  568,  568,
 /*   220 */   568,  568,  467,  568,  477,  463,  507,  568,  568,  568,
 /*   230 */   568,  568,  568,  568,  436,  568,  568,  507,  568,  533,
 /*   240 */   568,  475,  568,  568,  568,  568,  568,  568,  568,  568,
 /*   250 */   473,  568,  568,  479,  507,  467,  568,  568,  568,  568,
 /*   260 */   508,  429,  437,  364,  501,  519,  503,  440,  500,  479,
 /*   270 */   566,  516,  517,  502,  504,  518,  411,  530,  459,  506,
 /*   280 */   507,  527,  525,  427,  426,  388,  389,  390,  526,  471,
 /*   290 */   443,  487,  494,  497,  442,  482,  472,  474,  476,  387,
 /*   300 */   386,  371,  372,  373,  374,  370,  369,  365,  367,  368,
 /*   310 */   375,  376,  382,  384,  385,  381,  380,  377,  378,  379,
 /*   320 */   505,  498,  510,  421,  562,  555,  563,  447,  545,  546,
 /*   330 */   547,  556,  557,  558,  548,  550,  565,  564,  560,  559,
 /*   340 */   561,  544,  543,  450,  484,  488,  511,  483,  481,  499,
 /*   350 */   478,  480,  455,  456,  540,  541,  542,  539,  538,  460,
 /*   360 */   536,  537,  549,
    ];
    //*/

    //*- defines
    self.YYNOCODE = 125;
    self.YYSTACKDEPTH = 500;
    self.YYNSTATE = 363;
    self.YYNRULE = 205;
    self.YYERRORSYMBOL = 82;
    self.YYERRSYMDT = 'yy0';
    self.YYFALLBACK = 0;
    //*/

    self.yyFallback = [
        //*- of fallback tokens table
        //*/
    ];

    self.yyTokenName = [
        //*- symbolic names
  '$',             'VERT',          'COLON',         'RDEL',        
  'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG', 
  'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',        'TEXT',        
  'STRIPON',       'STRIPOFF',      'BLOCKSOURCE',   'LITERALSTART',
  'LITERALEND',    'LITERAL',       'LDEL',          'DOLLAR',      
  'ID',            'EQUAL',         'PTR',           'LDELIF',      
  'LDELFOR',       'SEMICOLON',     'INCDEC',        'TO',          
  'STEP',          'LDELFOREACH',   'SPACE',         'AS',          
  'APTR',          'LDELSETFILTER',  'SMARTYBLOCKCHILDPARENT',  'LDELSLASH',   
  'ATTR',          'INTEGER',       'COMMA',         'OPENP',       
  'CLOSEP',        'MATH',          'UNIMATH',       'ANDSYM',      
  'ISIN',          'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',      
  'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',   'ISODD',       
  'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',  
  'QMARK',         'NOT',           'TYPECAST',      'HEX',         
  'DOT',           'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',          
  'HATCH',         'OPENB',         'CLOSEB',        'EQUALS',      
  'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',
  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',  'MOD',         
  'LAND',          'LOR',           'LXOR',          'QUOTE',       
  'BACKTICK',      'DOLLARID',      'error',         'start',       
  'template',      'template_element',  'smartytag',     'literal',     
  'literal_elements',  'literal_element',  'value',         'modifierlist',
  'attributes',    'expr',          'varindexed',    'statement',   
  'statements',    'optspace',      'varvar',        'foraction',   
  'modparameters',  'attribute',     'ternary',       'array',       
  'ifcond',        'lop',           'variable',      'function',    
  'doublequoted_with_quotes',  'static_class_access',  'object',        'arrayindex',  
  'indexdef',      'varvarele',     'objectchain',   'objectelement',
  'method',        'params',        'modifier',      'modparameter',
  'arrayelements',  'arrayelement',  'doublequoted',  'doublequotedcontent',
        //*/
    ];

    self.yyRuleName = [
        //*- rule describes
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag RDEL",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= PHPSTARTTAG",
 /*   8 */ "template_element ::= PHPENDTAG",
 /*   9 */ "template_element ::= ASPSTARTTAG",
 /*  10 */ "template_element ::= ASPENDTAG",
 /*  11 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  12 */ "template_element ::= XMLTAG",
 /*  13 */ "template_element ::= TEXT",
 /*  14 */ "template_element ::= STRIPON",
 /*  15 */ "template_element ::= STRIPOFF",
 /*  16 */ "template_element ::= BLOCKSOURCE",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL value",
 /*  29 */ "smartytag ::= LDEL value modifierlist attributes",
 /*  30 */ "smartytag ::= LDEL value attributes",
 /*  31 */ "smartytag ::= LDEL expr modifierlist attributes",
 /*  32 */ "smartytag ::= LDEL expr attributes",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes",
 /*  36 */ "smartytag ::= LDEL varindexed EQUAL expr attributes",
 /*  37 */ "smartytag ::= LDEL ID attributes",
 /*  38 */ "smartytag ::= LDEL ID",
 /*  39 */ "smartytag ::= LDEL ID PTR ID attributes",
 /*  40 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  41 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  42 */ "smartytag ::= LDELIF expr",
 /*  43 */ "smartytag ::= LDELIF expr attributes",
 /*  44 */ "smartytag ::= LDELIF statement",
 /*  45 */ "smartytag ::= LDELIF statement attributes",
 /*  46 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes",
 /*  47 */ "foraction ::= EQUAL expr",
 /*  48 */ "foraction ::= INCDEC",
 /*  49 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  50 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  51 */ "smartytag ::= LDELFOREACH attributes",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes",
 /*  55 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  56 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  57 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist",
 /*  58 */ "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT",
 /*  59 */ "smartytag ::= LDELSLASH ID",
 /*  60 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  61 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  62 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  63 */ "attributes ::= attributes attribute",
 /*  64 */ "attributes ::= attribute",
 /*  65 */ "attributes ::=",
 /*  66 */ "attribute ::= SPACE ID EQUAL ID",
 /*  67 */ "attribute ::= ATTR expr",
 /*  68 */ "attribute ::= ATTR value",
 /*  69 */ "attribute ::= SPACE ID",
 /*  70 */ "attribute ::= SPACE expr",
 /*  71 */ "attribute ::= SPACE value",
 /*  72 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  73 */ "statements ::= statement",
 /*  74 */ "statements ::= statements COMMA statement",
 /*  75 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  76 */ "statement ::= varindexed EQUAL expr",
 /*  77 */ "statement ::= OPENP statement CLOSEP",
 /*  78 */ "expr ::= value",
 /*  79 */ "expr ::= ternary",
 /*  80 */ "expr ::= DOLLAR ID COLON ID",
 /*  81 */ "expr ::= expr MATH value",
 /*  82 */ "expr ::= expr UNIMATH value",
 /*  83 */ "expr ::= expr ANDSYM value",
 /*  84 */ "expr ::= array",
 /*  85 */ "expr ::= expr modifierlist",
 /*  86 */ "expr ::= expr ifcond expr",
 /*  87 */ "expr ::= expr ISIN array",
 /*  88 */ "expr ::= expr ISIN value",
 /*  89 */ "expr ::= expr lop expr",
 /*  90 */ "expr ::= expr ISDIVBY expr",
 /*  91 */ "expr ::= expr ISNOTDIVBY expr",
 /*  92 */ "expr ::= expr ISEVEN",
 /*  93 */ "expr ::= expr ISNOTEVEN",
 /*  94 */ "expr ::= expr ISEVENBY expr",
 /*  95 */ "expr ::= expr ISNOTEVENBY expr",
 /*  96 */ "expr ::= expr ISODD",
 /*  97 */ "expr ::= expr ISNOTODD",
 /*  98 */ "expr ::= expr ISODDBY expr",
 /*  99 */ "expr ::= expr ISNOTODDBY expr",
 /* 100 */ "expr ::= value INSTANCEOF ID",
 /* 101 */ "expr ::= value INSTANCEOF value",
 /* 102 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 103 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 104 */ "value ::= variable",
 /* 105 */ "value ::= UNIMATH value",
 /* 106 */ "value ::= NOT value",
 /* 107 */ "value ::= TYPECAST value",
 /* 108 */ "value ::= variable INCDEC",
 /* 109 */ "value ::= HEX",
 /* 110 */ "value ::= INTEGER",
 /* 111 */ "value ::= INTEGER DOT INTEGER",
 /* 112 */ "value ::= INTEGER DOT",
 /* 113 */ "value ::= DOT INTEGER",
 /* 114 */ "value ::= ID",
 /* 115 */ "value ::= function",
 /* 116 */ "value ::= OPENP expr CLOSEP",
 /* 117 */ "value ::= SINGLEQUOTESTRING",
 /* 118 */ "value ::= doublequoted_with_quotes",
 /* 119 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 120 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 121 */ "value ::= smartytag RDEL",
 /* 122 */ "value ::= value modifierlist",
 /* 123 */ "variable ::= varindexed",
 /* 124 */ "variable ::= DOLLAR varvar AT ID",
 /* 125 */ "variable ::= object",
 /* 126 */ "variable ::= HATCH ID HATCH",
 /* 127 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 128 */ "variable ::= HATCH variable HATCH",
 /* 129 */ "variable ::= HATCH variable HATCH arrayindex",
 /* 130 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 131 */ "arrayindex ::= arrayindex indexdef",
 /* 132 */ "arrayindex ::=",
 /* 133 */ "indexdef ::= DOT DOLLAR varvar",
 /* 134 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 135 */ "indexdef ::= DOT ID",
 /* 136 */ "indexdef ::= DOT INTEGER",
 /* 137 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 138 */ "indexdef ::= OPENB ID CLOSEB",
 /* 139 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 140 */ "indexdef ::= OPENB expr CLOSEB",
 /* 141 */ "indexdef ::= OPENB CLOSEB",
 /* 142 */ "varvar ::= varvarele",
 /* 143 */ "varvar ::= varvar varvarele",
 /* 144 */ "varvarele ::= ID",
 /* 145 */ "varvarele ::= LDEL expr RDEL",
 /* 146 */ "object ::= varindexed objectchain",
 /* 147 */ "objectchain ::= objectelement",
 /* 148 */ "objectchain ::= objectchain objectelement",
 /* 149 */ "objectelement ::= PTR ID arrayindex",
 /* 150 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 151 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 152 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 153 */ "objectelement ::= PTR method",
 /* 154 */ "function ::= ID OPENP params CLOSEP",
 /* 155 */ "method ::= ID OPENP params CLOSEP",
 /* 156 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 157 */ "params ::= params COMMA expr",
 /* 158 */ "params ::= expr",
 /* 159 */ "params ::=",
 /* 160 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 161 */ "modifierlist ::= modifier modparameters",
 /* 162 */ "modifier ::= VERT AT ID",
 /* 163 */ "modifier ::= VERT ID",
 /* 164 */ "modparameters ::= modparameters modparameter",
 /* 165 */ "modparameters ::=",
 /* 166 */ "modparameter ::= COLON value",
 /* 167 */ "modparameter ::= COLON array",
 /* 168 */ "static_class_access ::= method",
 /* 169 */ "static_class_access ::= method objectchain",
 /* 170 */ "static_class_access ::= ID",
 /* 171 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 172 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 173 */ "ifcond ::= EQUALS",
 /* 174 */ "ifcond ::= NOTEQUALS",
 /* 175 */ "ifcond ::= GREATERTHAN",
 /* 176 */ "ifcond ::= LESSTHAN",
 /* 177 */ "ifcond ::= GREATEREQUAL",
 /* 178 */ "ifcond ::= LESSEQUAL",
 /* 179 */ "ifcond ::= IDENTITY",
 /* 180 */ "ifcond ::= NONEIDENTITY",
 /* 181 */ "ifcond ::= MOD",
 /* 182 */ "lop ::= LAND",
 /* 183 */ "lop ::= LOR",
 /* 184 */ "lop ::= LXOR",
 /* 185 */ "array ::= OPENB arrayelements CLOSEB",
 /* 186 */ "arrayelements ::= arrayelement",
 /* 187 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 188 */ "arrayelements ::=",
 /* 189 */ "arrayelement ::= value APTR expr",
 /* 190 */ "arrayelement ::= ID APTR expr",
 /* 191 */ "arrayelement ::= expr",
 /* 192 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 193 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 194 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 195 */ "doublequoted ::= doublequotedcontent",
 /* 196 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 197 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 198 */ "doublequotedcontent ::= DOLLARID",
 /* 199 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 200 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 201 */ "doublequotedcontent ::= smartytag RDEL",
 /* 202 */ "doublequotedcontent ::= TEXT",
 /* 203 */ "optspace ::= SPACE",
 /* 204 */ "optspace ::=",
        //*/
    ];

    proto.tokenName = function(tokenType) {
        if (tokenType === 0) {
            return 'End of Input';
        }
        if (tokenType > 0 && tokenType < count(self.yyTokenName)) {
            return self.yyTokenName[tokenType];
        } else {
            return "Unknown";
        }
    };

    self.yy_destructor = function(yymajor, yypminor) {
        switch (yymajor) {
            //*- symbol popped action
            //*/
            default: break; /* If no destructor action specified: do nothing */
        }
    };

    proto.yy_pop_parser_stack = function() {
        if (!count(this.yystack)) {
            return;
        }
        var yytos = this.yystack.pop();
        var yymajor = yytos.major;
        self.yy_destructor(yymajor, yytos.minor);
        this.yyidx--;

        return yymajor;
    };


    proto.__destruct = function() {
        while (this.yystack.length) {
            this.yy_pop_parser_stack();
        }
    };



    proto.yy_get_expected_tokens = function(token) {
        var state = this.yystack[this.yyidx].stateno;
        var expected = self.yyExpectedTokens[state];
        if (in_array(token, self.yyExpectedTokens[state], true)) {
            return expected;
        }
        var stack = this.yystack.slice(0);
        var yyidx = this.yyidx;
        next: do {
            var yyact = this.yy_find_shift_action(token);
            if (yyact >= self.YYNSTATE && yyact < self.YYNSTATE + self.YYNRULE) {
                // reduce action
                var done = 0;
                do {
                    if (done++ == 100) {
                        this.yyidx = yyidx;
                        this.yystack = stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique(expected);
                    }
                    var yyruleno = yyact - self.YYNSTATE;
                    this.yyidx -= self.yyRuleInfo[yyruleno]['rhs'];
                    var nextstate = this.yy_find_reduce_action(
                        this.yystack[this.yyidx].stateno,
                        self.yyRuleInfo[yyruleno]['lhs']);
                    if (isset(self.yyExpectedTokens[nextstate])) {
                        expected = array_merge(expected, self.yyExpectedTokens[nextstate]);
                        if (in_array(token,
                            self.yyExpectedTokens[nextstate], true)) {
                            this.yyidx = yyidx;
                            this.yystack = stack;

                            return array_unique(expected);
                        }
                    }
                    if (nextstate < self.YYNSTATE) {
                        // we need to shift a non-terminal
                        this.yyidx++;
                        var x = new TP_yyStackEntry();
                        x.stateno = nextstate;
                        x.major = self.yyRuleInfo[yyruleno]['lhs'];
                        this.yystack[this.yyidx] = x;
                        continue next;
                    } else if (nextstate == self.YYNSTATE + self.YYNRULE + 1) {
                        this.yyidx = yyidx;
                        this.yystack = stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique(expected);
                    } else if (nextstate === self.YY_NO_ACTION) {
                        this.yyidx = yyidx;
                        this.yystack = stack;
                        // input accepted, but not shifted (I guess)
                        return expected;
                    } else {
                        yyact = nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        this.yyidx = yyidx;
        this.yystack = stack;

        return array_unique(expected);
    };

    proto.yy_is_expected_token = function(token) {
        if (token === 0) {
            return true; // 0 is not part of this
        }
        var state = this.yystack[this.yyidx].stateno;
        if (in_array(token, self.yyExpectedTokens[state], true)) {
            return true;
        }
        var stack = this.yystack.slice(0);
        var yyidx = this.yyidx;
        next: do {
            var yyact = this.yy_find_shift_action(token);
            if (yyact >= self.YYNSTATE && yyact < self.YYNSTATE + self.YYNRULE) {
                // reduce action
                var done = 0;
                do {
                    if (done++ == 100) {
                        this.yyidx = yyidx;
                        this.yystack = stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    var yyruleno = yyact - self.YYNSTATE;
                    this.yyidx -= self.yyRuleInfo[yyruleno]['rhs'];
                    var nextstate = this.yy_find_reduce_action(
                        this.yystack[this.yyidx].stateno,
                        self.yyRuleInfo[yyruleno]['lhs']);
                    if (isset(self.yyExpectedTokens, nextstate) &&
                        in_array(token, self.yyExpectedTokens[nextstate], true)) {
                        this.yyidx = yyidx;
                        this.yystack = stack;

                        return true;
                    }
                    if (nextstate < self.YYNSTATE) {
                        // we need to shift a non-terminal
                        this.yyidx++;
                        var x = new TP_yyStackEntry();
                        x.stateno = nextstate;
                        x.major = self.yyRuleInfo[yyruleno]['lhs'];
                        this.yystack[this.yyidx] = x;
                        continue next;
                    } else if (nextstate == self.YYNSTATE + self.YYNRULE + 1) {
                        this.yyidx = yyidx;
                        this.yystack = stack;
                        if (!token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } else if (nextstate === self.YY_NO_ACTION) {
                        this.yyidx = yyidx;
                        this.yystack = stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        yyact = nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        this.yyidx = yyidx;
        this.yystack = stack;

        return true;
    };

    proto.yy_find_shift_action = function(iLookAhead) {
        var stateno = this.yystack[this.yyidx].stateno;

        /* if (this.yyidx < 0) return self.YY_NO_ACTION;  */
        if (!isset(self.yy_shift_ofst, stateno)) {
            // no shift actions
            return self.yy_default[stateno];
        }
        var i = self.yy_shift_ofst[stateno];
        if (i === self.YY_SHIFT_USE_DFLT) {
            return self.yy_default[stateno];
        }
        if (iLookAhead == self.YYNOCODE) {
            return self.YY_NO_ACTION;
        }
        i += iLookAhead;
        if (i < 0 || i >= self.YY_SZ_ACTTAB ||
            self.yy_lookahead[i] != iLookAhead) {
            if (count(self.yyFallback) && iLookAhead < count(self.yyFallback) && (iFallback = self.yyFallback[iLookAhead]) != 0) {
                return this.yy_find_shift_action(iFallback);
            }

            return self.yy_default[stateno];
        } else {
            return self.yy_action[i];
        }
    };

    proto.yy_find_reduce_action = function(stateno, iLookAhead) {
        /* stateno = this.yystack[this.yyidx].stateno; */
        if (!isset(self.yy_reduce_ofst, stateno)) {
            return self.yy_default[stateno];
        }
        var i = self.yy_reduce_ofst[stateno];
        if (i == self.YY_REDUCE_USE_DFLT) {
            return self.yy_default[stateno];
        }
        if (iLookAhead == self.YYNOCODE) {
            return self.YY_NO_ACTION;
        }
        i += iLookAhead;
        if (i < 0 || i >= self.YY_SZ_ACTTAB ||
            self.yy_lookahead[i] != iLookAhead) {
            return self.yy_default[stateno];
        } else {
            return self.yy_action[i];
        }
    };

    proto.yy_shift = function(yyNewState, yyMajor, yypMinor) {
        this.yyidx++;
        if (this.yyidx >= self.YYSTACKDEPTH) {
            this.yyidx--;
            while (this.yyidx >= 0) {
                this.yy_pop_parser_stack();
            }
            //*- stack overflow action
//line 156 "smarty_internal_templateparser.jy"

    this.internalError = true;
    this.compiler.trigger_template_error("Stack overflow in template parser");
//line 1724 "smarty_internal_templateparser.js"
            //*/
            return;
        }

        var yytos = new TP_yyStackEntry();
        yytos.stateno = yyNewState;
        yytos.major = yyMajor;
        yytos.minor = yypMinor;
        this.yystack.push(yytos);
    };

    self.yyRuleInfo = [
        //*- rule info
  { 'lhs' : 83, 'rhs' : 1 },
  { 'lhs' : 84, 'rhs' : 1 },
  { 'lhs' : 84, 'rhs' : 2 },
  { 'lhs' : 84, 'rhs' : 0 },
  { 'lhs' : 85, 'rhs' : 2 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 85, 'rhs' : 1 },
  { 'lhs' : 87, 'rhs' : 2 },
  { 'lhs' : 87, 'rhs' : 3 },
  { 'lhs' : 88, 'rhs' : 2 },
  { 'lhs' : 88, 'rhs' : 0 },
  { 'lhs' : 89, 'rhs' : 1 },
  { 'lhs' : 89, 'rhs' : 1 },
  { 'lhs' : 89, 'rhs' : 1 },
  { 'lhs' : 89, 'rhs' : 1 },
  { 'lhs' : 89, 'rhs' : 1 },
  { 'lhs' : 89, 'rhs' : 1 },
  { 'lhs' : 89, 'rhs' : 1 },
  { 'lhs' : 86, 'rhs' : 2 },
  { 'lhs' : 86, 'rhs' : 4 },
  { 'lhs' : 86, 'rhs' : 3 },
  { 'lhs' : 86, 'rhs' : 4 },
  { 'lhs' : 86, 'rhs' : 3 },
  { 'lhs' : 86, 'rhs' : 5 },
  { 'lhs' : 86, 'rhs' : 5 },
  { 'lhs' : 86, 'rhs' : 6 },
  { 'lhs' : 86, 'rhs' : 5 },
  { 'lhs' : 86, 'rhs' : 3 },
  { 'lhs' : 86, 'rhs' : 2 },
  { 'lhs' : 86, 'rhs' : 5 },
  { 'lhs' : 86, 'rhs' : 4 },
  { 'lhs' : 86, 'rhs' : 6 },
  { 'lhs' : 86, 'rhs' : 2 },
  { 'lhs' : 86, 'rhs' : 3 },
  { 'lhs' : 86, 'rhs' : 2 },
  { 'lhs' : 86, 'rhs' : 3 },
  { 'lhs' : 86, 'rhs' : 11 },
  { 'lhs' : 99, 'rhs' : 2 },
  { 'lhs' : 99, 'rhs' : 1 },
  { 'lhs' : 86, 'rhs' : 5 },
  { 'lhs' : 86, 'rhs' : 7 },
  { 'lhs' : 86, 'rhs' : 2 },
  { 'lhs' : 86, 'rhs' : 7 },
  { 'lhs' : 86, 'rhs' : 10 },
  { 'lhs' : 86, 'rhs' : 7 },
  { 'lhs' : 86, 'rhs' : 10 },
  { 'lhs' : 86, 'rhs' : 3 },
  { 'lhs' : 86, 'rhs' : 4 },
  { 'lhs' : 86, 'rhs' : 2 },
  { 'lhs' : 86, 'rhs' : 2 },
  { 'lhs' : 86, 'rhs' : 3 },
  { 'lhs' : 86, 'rhs' : 4 },
  { 'lhs' : 86, 'rhs' : 5 },
  { 'lhs' : 92, 'rhs' : 2 },
  { 'lhs' : 92, 'rhs' : 1 },
  { 'lhs' : 92, 'rhs' : 0 },
  { 'lhs' : 101, 'rhs' : 4 },
  { 'lhs' : 101, 'rhs' : 2 },
  { 'lhs' : 101, 'rhs' : 2 },
  { 'lhs' : 101, 'rhs' : 2 },
  { 'lhs' : 101, 'rhs' : 2 },
  { 'lhs' : 101, 'rhs' : 2 },
  { 'lhs' : 101, 'rhs' : 4 },
  { 'lhs' : 96, 'rhs' : 1 },
  { 'lhs' : 96, 'rhs' : 3 },
  { 'lhs' : 95, 'rhs' : 4 },
  { 'lhs' : 95, 'rhs' : 3 },
  { 'lhs' : 95, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 1 },
  { 'lhs' : 93, 'rhs' : 1 },
  { 'lhs' : 93, 'rhs' : 4 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 1 },
  { 'lhs' : 93, 'rhs' : 2 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 2 },
  { 'lhs' : 93, 'rhs' : 2 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 2 },
  { 'lhs' : 93, 'rhs' : 2 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 93, 'rhs' : 3 },
  { 'lhs' : 102, 'rhs' : 8 },
  { 'lhs' : 102, 'rhs' : 7 },
  { 'lhs' : 90, 'rhs' : 1 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 90, 'rhs' : 1 },
  { 'lhs' : 90, 'rhs' : 1 },
  { 'lhs' : 90, 'rhs' : 3 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 90, 'rhs' : 1 },
  { 'lhs' : 90, 'rhs' : 1 },
  { 'lhs' : 90, 'rhs' : 3 },
  { 'lhs' : 90, 'rhs' : 1 },
  { 'lhs' : 90, 'rhs' : 1 },
  { 'lhs' : 90, 'rhs' : 3 },
  { 'lhs' : 90, 'rhs' : 3 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 90, 'rhs' : 2 },
  { 'lhs' : 106, 'rhs' : 1 },
  { 'lhs' : 106, 'rhs' : 4 },
  { 'lhs' : 106, 'rhs' : 1 },
  { 'lhs' : 106, 'rhs' : 3 },
  { 'lhs' : 106, 'rhs' : 4 },
  { 'lhs' : 106, 'rhs' : 3 },
  { 'lhs' : 106, 'rhs' : 4 },
  { 'lhs' : 94, 'rhs' : 3 },
  { 'lhs' : 111, 'rhs' : 2 },
  { 'lhs' : 111, 'rhs' : 0 },
  { 'lhs' : 112, 'rhs' : 3 },
  { 'lhs' : 112, 'rhs' : 5 },
  { 'lhs' : 112, 'rhs' : 2 },
  { 'lhs' : 112, 'rhs' : 2 },
  { 'lhs' : 112, 'rhs' : 4 },
  { 'lhs' : 112, 'rhs' : 3 },
  { 'lhs' : 112, 'rhs' : 5 },
  { 'lhs' : 112, 'rhs' : 3 },
  { 'lhs' : 112, 'rhs' : 2 },
  { 'lhs' : 98, 'rhs' : 1 },
  { 'lhs' : 98, 'rhs' : 2 },
  { 'lhs' : 113, 'rhs' : 1 },
  { 'lhs' : 113, 'rhs' : 3 },
  { 'lhs' : 110, 'rhs' : 2 },
  { 'lhs' : 114, 'rhs' : 1 },
  { 'lhs' : 114, 'rhs' : 2 },
  { 'lhs' : 115, 'rhs' : 3 },
  { 'lhs' : 115, 'rhs' : 4 },
  { 'lhs' : 115, 'rhs' : 5 },
  { 'lhs' : 115, 'rhs' : 6 },
  { 'lhs' : 115, 'rhs' : 2 },
  { 'lhs' : 107, 'rhs' : 4 },
  { 'lhs' : 116, 'rhs' : 4 },
  { 'lhs' : 116, 'rhs' : 5 },
  { 'lhs' : 117, 'rhs' : 3 },
  { 'lhs' : 117, 'rhs' : 1 },
  { 'lhs' : 117, 'rhs' : 0 },
  { 'lhs' : 91, 'rhs' : 3 },
  { 'lhs' : 91, 'rhs' : 2 },
  { 'lhs' : 118, 'rhs' : 3 },
  { 'lhs' : 118, 'rhs' : 2 },
  { 'lhs' : 100, 'rhs' : 2 },
  { 'lhs' : 100, 'rhs' : 0 },
  { 'lhs' : 119, 'rhs' : 2 },
  { 'lhs' : 119, 'rhs' : 2 },
  { 'lhs' : 109, 'rhs' : 1 },
  { 'lhs' : 109, 'rhs' : 2 },
  { 'lhs' : 109, 'rhs' : 1 },
  { 'lhs' : 109, 'rhs' : 3 },
  { 'lhs' : 109, 'rhs' : 4 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 104, 'rhs' : 1 },
  { 'lhs' : 105, 'rhs' : 1 },
  { 'lhs' : 105, 'rhs' : 1 },
  { 'lhs' : 105, 'rhs' : 1 },
  { 'lhs' : 103, 'rhs' : 3 },
  { 'lhs' : 120, 'rhs' : 1 },
  { 'lhs' : 120, 'rhs' : 3 },
  { 'lhs' : 120, 'rhs' : 0 },
  { 'lhs' : 121, 'rhs' : 3 },
  { 'lhs' : 121, 'rhs' : 3 },
  { 'lhs' : 121, 'rhs' : 1 },
  { 'lhs' : 108, 'rhs' : 2 },
  { 'lhs' : 108, 'rhs' : 3 },
  { 'lhs' : 122, 'rhs' : 2 },
  { 'lhs' : 122, 'rhs' : 1 },
  { 'lhs' : 123, 'rhs' : 3 },
  { 'lhs' : 123, 'rhs' : 3 },
  { 'lhs' : 123, 'rhs' : 1 },
  { 'lhs' : 123, 'rhs' : 3 },
  { 'lhs' : 123, 'rhs' : 3 },
  { 'lhs' : 123, 'rhs' : 2 },
  { 'lhs' : 123, 'rhs' : 1 },
  { 'lhs' : 97, 'rhs' : 1 },
  { 'lhs' : 97, 'rhs' : 0 },
        //*/
    ];

    self.yyReduceMap = {
        //*- reduice map
        "0" : 0,
        "1" : 1,
        "2" : 1,
        "4" : 4,
        "5" : 5,
        "6" : 6,
        "7" : 7,
        "8" : 8,
        "9" : 9,
        "10" : 10,
        "11" : 11,
        "12" : 12,
        "13" : 13,
        "14" : 14,
        "15" : 15,
        "16" : 16,
        "17" : 17,
        "20" : 17,
        "204" : 17,
        "18" : 18,
        "77" : 18,
        "19" : 19,
        "105" : 19,
        "107" : 19,
        "108" : 19,
        "131" : 19,
        "169" : 19,
        "21" : 21,
        "22" : 21,
        "48" : 21,
        "70" : 21,
        "71" : 21,
        "78" : 21,
        "79" : 21,
        "84" : 21,
        "104" : 21,
        "109" : 21,
        "110" : 21,
        "115" : 21,
        "117" : 21,
        "118" : 21,
        "125" : 21,
        "142" : 21,
        "168" : 21,
        "170" : 21,
        "186" : 21,
        "191" : 21,
        "203" : 21,
        "23" : 23,
        "24" : 23,
        "25" : 25,
        "26" : 26,
        "27" : 27,
        "28" : 28,
        "29" : 29,
        "30" : 30,
        "32" : 30,
        "31" : 31,
        "33" : 33,
        "34" : 33,
        "35" : 35,
        "36" : 36,
        "37" : 37,
        "38" : 38,
        "39" : 39,
        "40" : 40,
        "41" : 41,
        "42" : 42,
        "43" : 43,
        "45" : 43,
        "44" : 44,
        "46" : 46,
        "47" : 47,
        "49" : 49,
        "50" : 50,
        "51" : 51,
        "52" : 52,
        "54" : 52,
        "53" : 53,
        "55" : 53,
        "56" : 56,
        "57" : 57,
        "58" : 58,
        "59" : 59,
        "60" : 60,
        "61" : 61,
        "62" : 62,
        "63" : 63,
        "64" : 64,
        "73" : 64,
        "158" : 64,
        "162" : 64,
        "166" : 64,
        "167" : 64,
        "65" : 65,
        "159" : 65,
        "165" : 65,
        "66" : 66,
        "67" : 67,
        "68" : 67,
        "69" : 69,
        "72" : 72,
        "74" : 74,
        "75" : 75,
        "76" : 75,
        "80" : 80,
        "81" : 81,
        "82" : 81,
        "83" : 81,
        "85" : 85,
        "122" : 85,
        "86" : 86,
        "89" : 86,
        "100" : 86,
        "87" : 87,
        "88" : 88,
        "90" : 90,
        "91" : 91,
        "92" : 92,
        "97" : 92,
        "93" : 93,
        "96" : 93,
        "94" : 94,
        "99" : 94,
        "95" : 95,
        "98" : 95,
        "101" : 101,
        "102" : 102,
        "103" : 103,
        "106" : 106,
        "111" : 111,
        "112" : 112,
        "113" : 113,
        "114" : 114,
        "116" : 116,
        "119" : 119,
        "120" : 120,
        "121" : 121,
        "123" : 123,
        "124" : 124,
        "126" : 126,
        "127" : 127,
        "128" : 128,
        "129" : 129,
        "130" : 130,
        "132" : 132,
        "188" : 132,
        "133" : 133,
        "134" : 134,
        "135" : 135,
        "136" : 136,
        "137" : 137,
        "140" : 137,
        "138" : 138,
        "139" : 139,
        "141" : 141,
        "143" : 143,
        "144" : 144,
        "145" : 145,
        "146" : 146,
        "147" : 147,
        "148" : 148,
        "149" : 149,
        "150" : 150,
        "151" : 151,
        "152" : 152,
        "153" : 153,
        "154" : 154,
        "155" : 155,
        "156" : 156,
        "157" : 157,
        "160" : 160,
        "161" : 161,
        "163" : 163,
        "164" : 164,
        "171" : 171,
        "172" : 172,
        "173" : 173,
        "174" : 174,
        "175" : 175,
        "176" : 176,
        "177" : 177,
        "178" : 178,
        "179" : 179,
        "180" : 180,
        "181" : 181,
        "182" : 182,
        "183" : 183,
        "184" : 184,
        "185" : 185,
        "187" : 187,
        "189" : 189,
        "190" : 190,
        "192" : 192,
        "193" : 193,
        "194" : 194,
        "195" : 195,
        "196" : 196,
        "197" : 196,
        "199" : 196,
        "198" : 198,
        "200" : 200,
        "201" : 201,
        "202" : 202,
        //*/
    };

    //*- reduice actions
//line 167 "smarty_internal_templateparser.jy"
    proto.yy_r0 = function(){
    $this->_retvalue = $this->root_buffer->to_smarty_php();
    };
//line 2160 "smarty_internal_templateparser.js"
//line 175 "smarty_internal_templateparser.jy"
    proto.yy_r1 = function(){
    if ($this->yystack[$this->yyidx + 0]->minor != null) {
        $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
    };
//line 2167 "smarty_internal_templateparser.js"
//line 195 "smarty_internal_templateparser.jy"
    proto.yy_r4 = function(){
    if ($this->compiler->has_code) {
        $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + -1]->minor,true));
    } else { 
        $this->_retvalue = null;
    }  
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    };
//line 2179 "smarty_internal_templateparser.js"
//line 207 "smarty_internal_templateparser.jy"
    proto.yy_r5 = function(){
    $this->_retvalue = null;
    };
//line 2184 "smarty_internal_templateparser.js"
//line 212 "smarty_internal_templateparser.jy"
    proto.yy_r6 = function(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    };
//line 2189 "smarty_internal_templateparser.js"
//line 217 "smarty_internal_templateparser.jy"
    proto.yy_r7 = function(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->smarty instanceof SmartyBC)) {
            $this->compiler->trigger_template_error (self::Err3);
        }
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = null;
    }
    };
//line 2205 "smarty_internal_templateparser.js"
//line 233 "smarty_internal_templateparser.jy"
    proto.yy_r8 = function(){
    if ($this->is_xml) {
        $this->compiler->tag_nocache = true; 
        $this->is_xml = false;
        $save = $this->template->has_nocache_code; 
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>\n", $this->compiler, true));
        $this->template->has_nocache_code = $save; 
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = null;
    }
    };
//line 2224 "smarty_internal_templateparser.js"
//line 252 "smarty_internal_templateparser.jy"
    proto.yy_r9 = function(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error (self::Err3);
            }
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = null;
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    }
    };
//line 2248 "smarty_internal_templateparser.js"
//line 276 "smarty_internal_templateparser.jy"
    proto.yy_r10 = function(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = null;
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    }
    };
//line 2269 "smarty_internal_templateparser.js"
//line 296 "smarty_internal_templateparser.jy"
    proto.yy_r11 = function(){
    if ($this->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor))); 
    } else {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));  
    }
    };
//line 2278 "smarty_internal_templateparser.js"
//line 305 "smarty_internal_templateparser.jy"
    proto.yy_r12 = function(){
    $this->compiler->tag_nocache = true;
    $this->is_xml = true; 
    $save = $this->template->has_nocache_code; 
    $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));
    $this->template->has_nocache_code = $save;
    };
//line 2287 "smarty_internal_templateparser.js"
//line 314 "smarty_internal_templateparser.jy"
    proto.yy_r13 = function(){
        if ($this->strip) {
            $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        }
    };
//line 2296 "smarty_internal_templateparser.js"
//line 323 "smarty_internal_templateparser.jy"
    proto.yy_r14 = function(){
    $this->strip = true;
    };
//line 2301 "smarty_internal_templateparser.js"
//line 327 "smarty_internal_templateparser.jy"
    proto.yy_r15 = function(){
    $this->strip = false;
    };
//line 2306 "smarty_internal_templateparser.js"
//line 331 "smarty_internal_templateparser.jy"
    proto.yy_r16 = function(){
        if ($this->strip) {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, $this->yystack[$this->yyidx + 0]->minor);
        }
    };
//line 2315 "smarty_internal_templateparser.js"
//line 340 "smarty_internal_templateparser.jy"
    proto.yy_r17 = function(){
    $this->_retvalue = '';
    };
//line 2320 "smarty_internal_templateparser.js"
//line 344 "smarty_internal_templateparser.jy"
    proto.yy_r18 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    };
//line 2325 "smarty_internal_templateparser.js"
//line 348 "smarty_internal_templateparser.jy"
    proto.yy_r19 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2330 "smarty_internal_templateparser.js"
//line 356 "smarty_internal_templateparser.jy"
    proto.yy_r21 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    };
//line 2335 "smarty_internal_templateparser.js"
//line 364 "smarty_internal_templateparser.jy"
    proto.yy_r23 = function(){
    $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
    };
//line 2340 "smarty_internal_templateparser.js"
//line 372 "smarty_internal_templateparser.jy"
    proto.yy_r25 = function(){
    $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);
    };
//line 2345 "smarty_internal_templateparser.js"
//line 376 "smarty_internal_templateparser.jy"
    proto.yy_r26 = function(){
    $this->_retvalue = '<<?php ?>%';
    };
//line 2350 "smarty_internal_templateparser.js"
//line 380 "smarty_internal_templateparser.jy"
    proto.yy_r27 = function(){
    $this->_retvalue = '%<?php ?>>';
    };
//line 2355 "smarty_internal_templateparser.js"
//line 389 "smarty_internal_templateparser.jy"
    proto.yy_r28 = function(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2360 "smarty_internal_templateparser.js"
//line 393 "smarty_internal_templateparser.jy"
    proto.yy_r29 = function(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
    };
//line 2365 "smarty_internal_templateparser.js"
//line 397 "smarty_internal_templateparser.jy"
    proto.yy_r30 = function(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    };
//line 2370 "smarty_internal_templateparser.js"
//line 401 "smarty_internal_templateparser.jy"
    proto.yy_r31 = function(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
    };
//line 2375 "smarty_internal_templateparser.js"
//line 414 "smarty_internal_templateparser.jy"
    proto.yy_r33 = function(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + 0]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -2]->minor."'")));
    };
//line 2380 "smarty_internal_templateparser.js"
//line 422 "smarty_internal_templateparser.jy"
    proto.yy_r35 = function(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")),$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2385 "smarty_internal_templateparser.js"
//line 426 "smarty_internal_templateparser.jy"
    proto.yy_r36 = function(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    };
//line 2390 "smarty_internal_templateparser.js"
//line 431 "smarty_internal_templateparser.jy"
    proto.yy_r37 = function(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    };
//line 2395 "smarty_internal_templateparser.js"
//line 435 "smarty_internal_templateparser.jy"
    proto.yy_r38 = function(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array());
    };
//line 2400 "smarty_internal_templateparser.js"
//line 440 "smarty_internal_templateparser.jy"
    proto.yy_r39 = function(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    };
//line 2405 "smarty_internal_templateparser.js"
//line 445 "smarty_internal_templateparser.jy"
    proto.yy_r40 = function(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).'?>';
    };
//line 2411 "smarty_internal_templateparser.js"
//line 451 "smarty_internal_templateparser.jy"
    proto.yy_r41 = function(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor)).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).'?>';
    };
//line 2417 "smarty_internal_templateparser.js"
//line 457 "smarty_internal_templateparser.jy"
    proto.yy_r42 = function(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length)); 
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2423 "smarty_internal_templateparser.js"
//line 462 "smarty_internal_templateparser.jy"
    proto.yy_r43 = function(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    };
//line 2429 "smarty_internal_templateparser.js"
//line 467 "smarty_internal_templateparser.jy"
    proto.yy_r44 = function(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2435 "smarty_internal_templateparser.js"
//line 478 "smarty_internal_templateparser.jy"
    proto.yy_r46 = function(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -2]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),1);
    };
//line 2440 "smarty_internal_templateparser.js"
//line 482 "smarty_internal_templateparser.jy"
    proto.yy_r47 = function(){
    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2445 "smarty_internal_templateparser.js"
//line 490 "smarty_internal_templateparser.jy"
    proto.yy_r49 = function(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    };
//line 2450 "smarty_internal_templateparser.js"
//line 494 "smarty_internal_templateparser.jy"
    proto.yy_r50 = function(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    };
//line 2455 "smarty_internal_templateparser.js"
//line 499 "smarty_internal_templateparser.jy"
    proto.yy_r51 = function(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    };
//line 2460 "smarty_internal_templateparser.js"
//line 504 "smarty_internal_templateparser.jy"
    proto.yy_r52 = function(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -4]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    };
//line 2465 "smarty_internal_templateparser.js"
//line 508 "smarty_internal_templateparser.jy"
    proto.yy_r53 = function(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -7]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -4]->minor))));
    };
//line 2470 "smarty_internal_templateparser.js"
//line 521 "smarty_internal_templateparser.jy"
    proto.yy_r56 = function(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    };
//line 2475 "smarty_internal_templateparser.js"
//line 525 "smarty_internal_templateparser.jy"
    proto.yy_r57 = function(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor)));
    };
//line 2480 "smarty_internal_templateparser.js"
//line 530 "smarty_internal_templateparser.jy"
    proto.yy_r58 = function(){
    $j = strrpos($this->yystack[$this->yyidx + 0]->minor,'.');
    if ($this->yystack[$this->yyidx + 0]->minor[$j+1] == 'c') {
        // {$smarty.block.child}
        $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    } else {
        // {$smarty.block.parent}
        $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
    }
    };
//line 2492 "smarty_internal_templateparser.js"
//line 543 "smarty_internal_templateparser.jy"
    proto.yy_r59 = function(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    };
//line 2497 "smarty_internal_templateparser.js"
//line 547 "smarty_internal_templateparser.jy"
    proto.yy_r60 = function(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2502 "smarty_internal_templateparser.js"
//line 552 "smarty_internal_templateparser.jy"
    proto.yy_r61 = function(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2507 "smarty_internal_templateparser.js"
//line 556 "smarty_internal_templateparser.jy"
    proto.yy_r62 = function(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2512 "smarty_internal_templateparser.js"
//line 564 "smarty_internal_templateparser.jy"
    proto.yy_r63 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    };
//line 2518 "smarty_internal_templateparser.js"
//line 570 "smarty_internal_templateparser.jy"
    proto.yy_r64 = function(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    };
//line 2523 "smarty_internal_templateparser.js"
//line 575 "smarty_internal_templateparser.jy"
    proto.yy_r65 = function(){
    $this->_retvalue = array();
    };
//line 2528 "smarty_internal_templateparser.js"
//line 580 "smarty_internal_templateparser.jy"
    proto.yy_r66 = function(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    };
//line 2541 "smarty_internal_templateparser.js"
//line 592 "smarty_internal_templateparser.jy"
    proto.yy_r67 = function(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    };
//line 2546 "smarty_internal_templateparser.js"
//line 600 "smarty_internal_templateparser.jy"
    proto.yy_r69 = function(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    };
//line 2551 "smarty_internal_templateparser.js"
//line 612 "smarty_internal_templateparser.jy"
    proto.yy_r72 = function(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    };
//line 2556 "smarty_internal_templateparser.js"
//line 625 "smarty_internal_templateparser.jy"
    proto.yy_r74 = function(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    };
//line 2562 "smarty_internal_templateparser.js"
//line 630 "smarty_internal_templateparser.jy"
    proto.yy_r75 = function(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    };
//line 2567 "smarty_internal_templateparser.js"
//line 658 "smarty_internal_templateparser.jy"
    proto.yy_r80 = function(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    };
//line 2572 "smarty_internal_templateparser.js"
//line 663 "smarty_internal_templateparser.jy"
    proto.yy_r81 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    };
//line 2577 "smarty_internal_templateparser.js"
//line 682 "smarty_internal_templateparser.jy"
    proto.yy_r85 = function(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2582 "smarty_internal_templateparser.js"
//line 688 "smarty_internal_templateparser.jy"
    proto.yy_r86 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2587 "smarty_internal_templateparser.js"
//line 692 "smarty_internal_templateparser.jy"
    proto.yy_r87 = function(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    };
//line 2592 "smarty_internal_templateparser.js"
//line 696 "smarty_internal_templateparser.jy"
    proto.yy_r88 = function(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    };
//line 2597 "smarty_internal_templateparser.js"
//line 704 "smarty_internal_templateparser.jy"
    proto.yy_r90 = function(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    };
//line 2602 "smarty_internal_templateparser.js"
//line 708 "smarty_internal_templateparser.jy"
    proto.yy_r91 = function(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    };
//line 2607 "smarty_internal_templateparser.js"
//line 712 "smarty_internal_templateparser.jy"
    proto.yy_r92 = function(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    };
//line 2612 "smarty_internal_templateparser.js"
//line 716 "smarty_internal_templateparser.jy"
    proto.yy_r93 = function(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    };
//line 2617 "smarty_internal_templateparser.js"
//line 720 "smarty_internal_templateparser.jy"
    proto.yy_r94 = function(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    };
//line 2622 "smarty_internal_templateparser.js"
//line 724 "smarty_internal_templateparser.jy"
    proto.yy_r95 = function(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    };
//line 2627 "smarty_internal_templateparser.js"
//line 748 "smarty_internal_templateparser.jy"
    proto.yy_r101 = function(){
    self::$prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.self::$prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.self::$prefix_number;
    };
//line 2634 "smarty_internal_templateparser.js"
//line 757 "smarty_internal_templateparser.jy"
    proto.yy_r102 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2639 "smarty_internal_templateparser.js"
//line 761 "smarty_internal_templateparser.jy"
    proto.yy_r103 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2644 "smarty_internal_templateparser.js"
//line 776 "smarty_internal_templateparser.jy"
    proto.yy_r106 = function(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2649 "smarty_internal_templateparser.js"
//line 797 "smarty_internal_templateparser.jy"
    proto.yy_r111 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2654 "smarty_internal_templateparser.js"
//line 801 "smarty_internal_templateparser.jy"
    proto.yy_r112 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    };
//line 2659 "smarty_internal_templateparser.js"
//line 805 "smarty_internal_templateparser.jy"
    proto.yy_r113 = function(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2664 "smarty_internal_templateparser.js"
//line 810 "smarty_internal_templateparser.jy"
    proto.yy_r114 = function(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    };
//line 2677 "smarty_internal_templateparser.js"
//line 828 "smarty_internal_templateparser.jy"
    proto.yy_r116 = function(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    };
//line 2682 "smarty_internal_templateparser.js"
//line 843 "smarty_internal_templateparser.jy"
    proto.yy_r119 = function(){
    if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        } 
    } else {
        $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    };
//line 2695 "smarty_internal_templateparser.js"
//line 855 "smarty_internal_templateparser.jy"
    proto.yy_r120 = function(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    };
//line 2704 "smarty_internal_templateparser.js"
//line 864 "smarty_internal_templateparser.jy"
    proto.yy_r121 = function(){
    self::$prefix_number++;
    $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + -1]->minor.'<?php $_tmp'.self::$prefix_number.'=ob_get_clean();?>';
    $this->_retvalue = '$_tmp'.self::$prefix_number;
    };
//line 2711 "smarty_internal_templateparser.js"
//line 879 "smarty_internal_templateparser.jy"
    proto.yy_r123 = function(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current 
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    };
//line 2724 "smarty_internal_templateparser.js"
//line 892 "smarty_internal_templateparser.jy"
    proto.yy_r124 = function(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2729 "smarty_internal_templateparser.js"
//line 902 "smarty_internal_templateparser.jy"
    proto.yy_r126 = function(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';
    };
//line 2734 "smarty_internal_templateparser.js"
//line 906 "smarty_internal_templateparser.jy"
    proto.yy_r127 = function(){
    $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'\')) ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' :null)';
    };
//line 2739 "smarty_internal_templateparser.js"
//line 910 "smarty_internal_templateparser.jy"
    proto.yy_r128 = function(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';
    };
//line 2744 "smarty_internal_templateparser.js"
//line 914 "smarty_internal_templateparser.jy"
    proto.yy_r129 = function(){
    $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -2]->minor .')) ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' : null)';
    };
//line 2749 "smarty_internal_templateparser.js"
//line 918 "smarty_internal_templateparser.jy"
    proto.yy_r130 = function(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    };
//line 2754 "smarty_internal_templateparser.js"
//line 931 "smarty_internal_templateparser.jy"
    proto.yy_r132 = function(){
    return;
    };
//line 2759 "smarty_internal_templateparser.js"
//line 937 "smarty_internal_templateparser.jy"
    proto.yy_r133 = function(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    };
//line 2764 "smarty_internal_templateparser.js"
//line 941 "smarty_internal_templateparser.jy"
    proto.yy_r134 = function(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    };
//line 2769 "smarty_internal_templateparser.js"
//line 945 "smarty_internal_templateparser.jy"
    proto.yy_r135 = function(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    };
//line 2774 "smarty_internal_templateparser.js"
//line 949 "smarty_internal_templateparser.jy"
    proto.yy_r136 = function(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    };
//line 2779 "smarty_internal_templateparser.js"
//line 953 "smarty_internal_templateparser.jy"
    proto.yy_r137 = function(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    };
//line 2784 "smarty_internal_templateparser.js"
//line 958 "smarty_internal_templateparser.jy"
    proto.yy_r138 = function(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    };
//line 2789 "smarty_internal_templateparser.js"
//line 962 "smarty_internal_templateparser.jy"
    proto.yy_r139 = function(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    };
//line 2794 "smarty_internal_templateparser.js"
//line 972 "smarty_internal_templateparser.jy"
    proto.yy_r141 = function(){
    $this->_retvalue = '[]';
    };
//line 2799 "smarty_internal_templateparser.js"
//line 985 "smarty_internal_templateparser.jy"
    proto.yy_r143 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2804 "smarty_internal_templateparser.js"
//line 990 "smarty_internal_templateparser.jy"
    proto.yy_r144 = function(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    };
//line 2809 "smarty_internal_templateparser.js"
//line 995 "smarty_internal_templateparser.jy"
    proto.yy_r145 = function(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    };
//line 2814 "smarty_internal_templateparser.js"
//line 1002 "smarty_internal_templateparser.jy"
    proto.yy_r146 = function(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    };
//line 2823 "smarty_internal_templateparser.js"
//line 1011 "smarty_internal_templateparser.jy"
    proto.yy_r147 = function(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    };
//line 2828 "smarty_internal_templateparser.js"
//line 1016 "smarty_internal_templateparser.jy"
    proto.yy_r148 = function(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2833 "smarty_internal_templateparser.js"
//line 1021 "smarty_internal_templateparser.jy"
    proto.yy_r149 = function(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2841 "smarty_internal_templateparser.js"
//line 1028 "smarty_internal_templateparser.jy"
    proto.yy_r150 = function(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    };
//line 2849 "smarty_internal_templateparser.js"
//line 1035 "smarty_internal_templateparser.jy"
    proto.yy_r151 = function(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    };
//line 2857 "smarty_internal_templateparser.js"
//line 1042 "smarty_internal_templateparser.jy"
    proto.yy_r152 = function(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    };
//line 2865 "smarty_internal_templateparser.js"
//line 1050 "smarty_internal_templateparser.jy"
    proto.yy_r153 = function(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2870 "smarty_internal_templateparser.js"
//line 1058 "smarty_internal_templateparser.jy"
    proto.yy_r154 = function(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                if (strncasecmp($par,'$_smarty_tpl->getConfigVariable',strlen('$_smarty_tpl->getConfigVariable')) === 0) {
                    self::$prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.self::$prefix_number.'='.str_replace(')',', false)',$par).';?>';
                    $isset_par = '$_tmp'.self::$prefix_number;
                } else {
                    $isset_par=str_replace("')->value","',null,true,false)->value",$par);
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
                }
                if ($func_name == 'empty') {
                    $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')';
                } else {
                    $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
                }
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    };
//line 2906 "smarty_internal_templateparser.js"
//line 1096 "smarty_internal_templateparser.jy"
    proto.yy_r155 = function(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    };
//line 2914 "smarty_internal_templateparser.js"
//line 1103 "smarty_internal_templateparser.jy"
    proto.yy_r156 = function(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    self::$prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.self::$prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>';
    $this->_retvalue = '$_tmp'.self::$prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    };
//line 2924 "smarty_internal_templateparser.js"
//line 1114 "smarty_internal_templateparser.jy"
    proto.yy_r157 = function(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    };
//line 2929 "smarty_internal_templateparser.js"
//line 1131 "smarty_internal_templateparser.jy"
    proto.yy_r160 = function(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    };
//line 2934 "smarty_internal_templateparser.js"
//line 1135 "smarty_internal_templateparser.jy"
    proto.yy_r161 = function(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    };
//line 2939 "smarty_internal_templateparser.js"
//line 1143 "smarty_internal_templateparser.jy"
    proto.yy_r163 = function(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    };
//line 2944 "smarty_internal_templateparser.js"
//line 1151 "smarty_internal_templateparser.jy"
    proto.yy_r164 = function(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    };
//line 2949 "smarty_internal_templateparser.js"
//line 1185 "smarty_internal_templateparser.jy"
    proto.yy_r171 = function(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2954 "smarty_internal_templateparser.js"
//line 1190 "smarty_internal_templateparser.jy"
    proto.yy_r172 = function(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 2959 "smarty_internal_templateparser.js"
//line 1196 "smarty_internal_templateparser.jy"
    proto.yy_r173 = function(){
    $this->_retvalue = '==';
    };
//line 2964 "smarty_internal_templateparser.js"
//line 1200 "smarty_internal_templateparser.jy"
    proto.yy_r174 = function(){
    $this->_retvalue = '!=';
    };
//line 2969 "smarty_internal_templateparser.js"
//line 1204 "smarty_internal_templateparser.jy"
    proto.yy_r175 = function(){
    $this->_retvalue = '>';
    };
//line 2974 "smarty_internal_templateparser.js"
//line 1208 "smarty_internal_templateparser.jy"
    proto.yy_r176 = function(){
    $this->_retvalue = '<';
    };
//line 2979 "smarty_internal_templateparser.js"
//line 1212 "smarty_internal_templateparser.jy"
    proto.yy_r177 = function(){
    $this->_retvalue = '>=';
    };
//line 2984 "smarty_internal_templateparser.js"
//line 1216 "smarty_internal_templateparser.jy"
    proto.yy_r178 = function(){
    $this->_retvalue = '<=';
    };
//line 2989 "smarty_internal_templateparser.js"
//line 1220 "smarty_internal_templateparser.jy"
    proto.yy_r179 = function(){
    $this->_retvalue = '===';
    };
//line 2994 "smarty_internal_templateparser.js"
//line 1224 "smarty_internal_templateparser.jy"
    proto.yy_r180 = function(){
    $this->_retvalue = '!==';
    };
//line 2999 "smarty_internal_templateparser.js"
//line 1228 "smarty_internal_templateparser.jy"
    proto.yy_r181 = function(){
    $this->_retvalue = '%';
    };
//line 3004 "smarty_internal_templateparser.js"
//line 1232 "smarty_internal_templateparser.jy"
    proto.yy_r182 = function(){
    $this->_retvalue = '&&';
    };
//line 3009 "smarty_internal_templateparser.js"
//line 1236 "smarty_internal_templateparser.jy"
    proto.yy_r183 = function(){
    $this->_retvalue = '||';
    };
//line 3014 "smarty_internal_templateparser.js"
//line 1240 "smarty_internal_templateparser.jy"
    proto.yy_r184 = function(){
    $this->_retvalue = ' XOR ';
    };
//line 3019 "smarty_internal_templateparser.js"
//line 1247 "smarty_internal_templateparser.jy"
    proto.yy_r185 = function(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    };
//line 3024 "smarty_internal_templateparser.js"
//line 1255 "smarty_internal_templateparser.jy"
    proto.yy_r187 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 3029 "smarty_internal_templateparser.js"
//line 1263 "smarty_internal_templateparser.jy"
    proto.yy_r189 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 3034 "smarty_internal_templateparser.js"
//line 1267 "smarty_internal_templateparser.jy"
    proto.yy_r190 = function(){ 
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    };
//line 3039 "smarty_internal_templateparser.js"
//line 1279 "smarty_internal_templateparser.jy"
    proto.yy_r192 = function(){
    $this->_retvalue = "''";
    };
//line 3044 "smarty_internal_templateparser.js"
//line 1283 "smarty_internal_templateparser.jy"
    proto.yy_r193 = function(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    };
//line 3049 "smarty_internal_templateparser.js"
//line 1288 "smarty_internal_templateparser.jy"
    proto.yy_r194 = function(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    };
//line 3055 "smarty_internal_templateparser.js"
//line 1293 "smarty_internal_templateparser.jy"
    proto.yy_r195 = function(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    };
//line 3060 "smarty_internal_templateparser.js"
//line 1297 "smarty_internal_templateparser.jy"
    proto.yy_r196 = function(){
    $this->_retvalue = new _smarty_code($this, '(string)'.$this->yystack[$this->yyidx + -1]->minor);
    };
//line 3065 "smarty_internal_templateparser.js"
//line 1305 "smarty_internal_templateparser.jy"
    proto.yy_r198 = function(){
    $this->_retvalue = new _smarty_code($this, '(string)$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');
    };
//line 3070 "smarty_internal_templateparser.js"
//line 1313 "smarty_internal_templateparser.jy"
    proto.yy_r200 = function(){
    $this->_retvalue = new _smarty_code($this, '(string)('.$this->yystack[$this->yyidx + -1]->minor.')');
    };
//line 3075 "smarty_internal_templateparser.js"
//line 1317 "smarty_internal_templateparser.jy"
    proto.yy_r201 = function(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + -1]->minor);
    };
//line 3080 "smarty_internal_templateparser.js"
//line 1321 "smarty_internal_templateparser.jy"
    proto.yy_r202 = function(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    };
//line 3085 "smarty_internal_templateparser.js"
    //*/

    proto.yy_reduce = function(yyruleno) {
        var yymsp = this.yystack[this.yyidx];
        var yy_lefthand_side = null;
        this._retvalue = null;

        if (isset(self.yyReduceMap, yyruleno)) {
            // call the action
            this._retvalue = null;
            this['yy_r' + self.yyReduceMap[yyruleno]]();
            yy_lefthand_side = this._retvalue;
        }

        var yygoto = self.yyRuleInfo[yyruleno]['lhs'];
        var yysize = self.yyRuleInfo[yyruleno]['rhs'];
        this.yyidx -= yysize;

        for (var i = yysize; i; i--) {
            // pop all of the right-hand side parameters
            this.yystack.pop();
        }

        var yyact = this.yy_find_reduce_action(this.yystack[this.yyidx].stateno, yygoto);
        if (yyact < self.YYNSTATE) {
            if (yysize) {
                this.yyidx++;
                var x = new TP_yyStackEntry();
                x.stateno = yyact;
                x.major = yygoto;
                x.minor = yy_lefthand_side;
                this.yystack[this.yyidx] = x;
            } else {
                this.yy_shift(yyact, yygoto, yy_lefthand_side);
            }
        } else if (yyact == self.YYNSTATE + self.YYNRULE + 1) {
            this.yy_accept();
        }
    };

    proto.yy_parse_failed = function() {
        while (this.yyidx >= 0) {
            this.yy_pop_parser_stack();
        }
        //*- parse fails action
        //*/
    };

    proto.yy_syntax_error = function(yymajor, TOKEN) {
        //*- syntax error action
//line 149 "smarty_internal_templateparser.jy"

    this.internalError = true;
    this.yymajor = yymajor;
    this.compiler.trigger_template_error();
//line 3142 "smarty_internal_templateparser.js"
        //*/
    };

    proto.yy_accept = function() {
        var stack;
        while (this.yyidx >= 0) {
            stack = this.yy_pop_parser_stack();
        }
        //*- parser accepts action
//line 140 "smarty_internal_templateparser.jy"

    this.successful = !this.internalError;
    this.internalError = false;
    this.retvalue = this._retvalue;
    //echo this.retvalue."\n\n";
    console.log(this.retvalue);
//line 3160 "smarty_internal_templateparser.js"
        //*/
    };

    proto.doParse = function(yymajor, yytokenvalue) {
        var yyerrorhit = 0; /* True if yymajor has invoked an error */

        if (this.yyidx === null || this.yyidx < 0) {
            this.yyidx = 0;
            this.yyerrcnt = -1;
            var x = new TP_yyStackEntry();
            x.stateno = 0;
            x.major = 0;
            this.yystack = [x];
        }
        var yyendofinput = (yymajor == 0);

        do {
            var yyact = this.yy_find_shift_action(yymajor);
            if (yymajor < self.YYERRORSYMBOL && !this.yy_is_expected_token(yymajor)) {
                // force a syntax error
                yyact = self.YY_ERROR_ACTION;
            }
            if (yyact < self.YYNSTATE) {
                this.yy_shift(yyact, yymajor, yytokenvalue);
                this.yyerrcnt--;
                if (yyendofinput && this.yyidx >= 0) {
                    yymajor = 0;
                } else {
                    yymajor = self.YYNOCODE;
                }
            } else if (yyact < self.YYNSTATE + self.YYNRULE) {
                this.yy_reduce(yyact - self.YYNSTATE);
            } else if (yyact == self.YY_ERROR_ACTION) {
                if (self.YYERRORSYMBOL) {
                    if (this.yyerrcnt < 0) {
                        this.yy_syntax_error(yymajor, yytokenvalue);
                    }
                    var yymx = this.yystack[this.yyidx].major;
                    if (yymx == self.YYERRORSYMBOL || yyerrorhit) {
                        this.yy_destructor(yymajor, yytokenvalue);
                        yymajor = self.YYNOCODE;
                    } else {
                        while (this.yyidx >= 0 &&
                            yymx != self.YYERRORSYMBOL &&
                            (yyact = this.yy_find_shift_action(self.YYERRORSYMBOL)) >= self.YYNSTATE
                        ) {
                            this.yy_pop_parser_stack();
                        }
                        if (this.yyidx < 0 || yymajor == 0) {
                            this.yy_destructor(yymajor, yytokenvalue);
                            this.yy_parse_failed();
                            yymajor = self.YYNOCODE;
                        } else if (yymx != self.YYERRORSYMBOL) {
                            this.yy_shift(yyact, self.YYERRORSYMBOL, 0);
                        }
                    }
                    this.yyerrcnt = 3;
                    yyerrorhit = 1;
                } else {
                    if (this.yyerrcnt <= 0) {
                        this.yy_syntax_error(yymajor, yytokenvalue);
                    }
                    this.yyerrcnt = 3;
                    this.yy_destructor(yymajor, yytokenvalue);
                    if (yyendofinput) {
                        this.yy_parse_failed();
                    }
                    yymajor = self.YYNOCODE;
                }
            } else {
                this.yy_accept();
                yymajor = self.YYNOCODE;
            }
        } while (yymajor != self.YYNOCODE && this.yyidx >= 0);
    };

    if (typeof module === "object" && typeof module.exports === "object") {
        // For CommonJS and CommonJS-like environments where a proper window is present,
        // execute the factory and get jQuery
        // For environments that do not inherently posses a window with a document
        // (such as Node.js), expose a jQuery-making factory as module.exports
        // This accentuates the need for the creation of a real window
        // e.g. var jQuery = require("jquery")(window);
        // See ticket #14549 for more info
        module.exports = self;
    }
})
//*- bind arguments
(Smarty_Internal_Templateparser, Smarty_Internal_Templateparser.prototype)
//*/
;
